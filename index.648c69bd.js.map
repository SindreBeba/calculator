{"mappings":"AACO,MAAMA,EAASC,OAAOC,OAAO,CAElCC,IAAK,MACLC,SAAU,WACVC,SAAU,WACVC,OAAQ,SAERC,MAAO,QACPC,UAAW,OACXC,OAAQ,SAERC,WAAWC,GACT,MAAO,CAACC,KAAKT,IAAKS,KAAKR,SAAUQ,KAAKP,SAAUO,KAAKN,QAAQO,SAC3DF,IAIJG,SAASH,GACgB,GAAhBA,EAAMI,SAAgBC,MAAMC,SAASN,MCfhD,IAAIO,EACAC,EAAe,EACfC,EAAiB,EACjBC,EAAarB,EAAOS,OAEpBa,EAAc,IAIlB,MAAMC,EAASC,SAASC,cAAc,WA8CtC,SAASC,IACPR,OAAmBS,EACnBR,EAAe,EACfC,EAAiB,EACjBC,EAAarB,EAAOS,OACpBa,EAAc,IAwBhB,SAASM,IACP,OAAQV,GACN,KAAKlB,EAAOM,OACVa,EAAeU,KAAKC,MAAMX,EAAeC,GACzC,MACF,KAAKpB,EAAOK,SACVc,GAA8BC,EAC9B,MACF,KAAKpB,EAAOI,SACVe,GAA8BC,EAC9B,MACF,KAAKpB,EAAOG,IACVgB,GAA8BC,EAC9B,MACF,UAAKO,EACHR,EAAeC,EACf,MACF,QAEE,YADAW,MAAM,oBAAoBb,oBAI9BI,EAAcH,EAAaa,WAM3BR,SAASC,cAAc,SAASQ,iBAAiB,SAAS,SAAUC,GAStE,IAAuBC,EARU,WAAzBD,EAAME,OAAOC,UAgBrB,SAAsBF,GArGtB,IAAsBG,EAsGhBtC,EAAOc,SAASqB,IAtGAG,EAuGLH,EAtGXnC,EAAOc,SAASO,GACE,MAAhBC,EACFA,EAAcgB,EAEdhB,GAAegB,EAERtC,EAAOU,WAAWW,GAC3BC,EAAcgB,EACLjB,GAAcrB,EAAOS,SAC9BiB,IACAJ,EAAcgB,GAGhBjB,EAAaiB,GA0FFtC,EAAOU,WAAWyB,GAvF/B,SAAwBG,GAClBtC,EAAOc,SAASO,KAClBF,EAAeC,EACfA,EAAiBH,SAASK,GAC1BM,KAEFV,EAAmBoB,EACnBjB,EAAaiB,EAiFXC,CAAeJ,GACNA,GAAenC,EAAOO,MAC/BmB,IACSS,GAAenC,EAAOQ,UAxE7Ba,GAAcrB,EAAOS,OACvBiB,IAEAJ,GADUtB,EAAOc,SAASO,IAAeC,EAAYP,QAAU,EACjD,IAEAO,EAAYkB,MAAM,GAAG,GAqE1BL,GAAenC,EAAOS,OAhE7BT,EAAOU,WAAWW,KAGlBrB,EAAOc,SAASO,KAClBD,EAAiBH,SAASK,IAE5BM,IACAP,EAAarB,EAAOS,QA4DlBsB,MAAM,oBAAoBI,oBAnB5BM,CADqBN,EAPHD,EAAME,OAAOzB,OApG3BW,EAAYP,OAAS,KACnBf,EAAOc,SAASO,GAClBC,EAAcA,EAAYoB,OAAO,EAAG,KAEpChB,IACAJ,EAAc,UAIlBC,EAAOoB,UAAYrB,EAqGnBsB,QAAQC,IACN,gBAAgBV,iBAA2BjB,aAA4BC,eAA0BC,mBAAgCC","sources":["src/button.js","src/calculator.js"],"sourcesContent":["// Enum object for button tag values\nexport const Button = Object.freeze({\n  // Operators\n  ADD: \"add\",\n  SUBTRACT: \"subtract\",\n  MULTIPLY: \"multiply\",\n  DIVIDE: \"divide\",\n  // Other buttons\n  CLEAR: \"clear\",\n  BACKSPACE: \"back\",\n  EQUALS: \"equals\",\n\n  isOperator(value) {\n    return [this.ADD, this.SUBTRACT, this.MULTIPLY, this.DIVIDE].includes(\n      value\n    );\n  },\n\n  isNumber(value) {\n    return value.length == 1 && !isNaN(parseInt(value));\n  },\n});\n","import { Button } from \"./button\";\n\n// Variables used to store calculator state\n\nlet selectedOperator;\nlet runningTotal = 0;\nlet currentOperand = 0;\nlet lastAction = Button.EQUALS;\n\nlet outputValue = \"0\";\n\n// HTML element constants\n\nconst output = document.querySelector(\".output\");\n\n// IO functions\n\nfunction writeOutput() {\n  if (outputValue.length > 13) {\n    if (Button.isNumber(lastAction)) {\n      outputValue = outputValue.substr(0, 13);\n    } else {\n      clear();\n      outputValue = \"ERROR\";\n    }\n  }\n\n  output.innerText = outputValue;\n}\n\n// Calculator functions\n\nfunction handleNumber(inputValue) {\n  if (Button.isNumber(lastAction)) {\n    if (outputValue === \"0\") {\n      outputValue = inputValue;\n    } else {\n      outputValue += inputValue;\n    }\n  } else if (Button.isOperator(lastAction)) {\n    outputValue = inputValue;\n  } else if (lastAction == Button.EQUALS) {\n    clear();\n    outputValue = inputValue;\n  }\n\n  lastAction = inputValue;\n}\n\nfunction handleOperator(inputValue) {\n  if (Button.isNumber(lastAction)) {\n    runningTotal = currentOperand;\n    currentOperand = parseInt(outputValue);\n    execute();\n  }\n  selectedOperator = inputValue;\n  lastAction = inputValue;\n}\n\nfunction clear() {\n  selectedOperator = undefined;\n  runningTotal = 0;\n  currentOperand = 0;\n  lastAction = Button.EQUALS;\n  outputValue = \"0\";\n}\n\nfunction backspace() {\n  if (lastAction == Button.EQUALS) {\n    clear();\n  } else if (!Button.isNumber(lastAction) || outputValue.length <= 1) {\n    outputValue = \"0\";\n  } else {\n    outputValue = outputValue.slice(0, -1);\n  }\n}\n\nfunction equals() {\n  if (Button.isOperator(lastAction)) {\n    return;\n  }\n  if (Button.isNumber(lastAction)) {\n    currentOperand = parseInt(outputValue);\n  }\n  execute();\n  lastAction = Button.EQUALS;\n}\n\nfunction execute() {\n  switch (selectedOperator) {\n    case Button.DIVIDE:\n      runningTotal = Math.floor(runningTotal / currentOperand);\n      break;\n    case Button.MULTIPLY:\n      runningTotal = runningTotal * currentOperand;\n      break;\n    case Button.SUBTRACT:\n      runningTotal = runningTotal - currentOperand;\n      break;\n    case Button.ADD:\n      runningTotal = runningTotal + currentOperand;\n      break;\n    case undefined:\n      runningTotal = currentOperand;\n      break;\n    default:\n      alert(`Error: operator \"${selectedOperator}\" is not valid.`);\n      return;\n  }\n\n  outputValue = runningTotal.toString();\n}\n\n// Init\n\nfunction init() {\n  document.querySelector(\".calc\").addEventListener(\"click\", function (event) {\n    if (event.target.tagName === \"BUTTON\") {\n      buttonClicked(event.target.value);\n    }\n  });\n}\n\ninit();\n\nfunction buttonClicked(buttonValue) {\n  inputHandler(buttonValue);\n  writeOutput();\n  console.log(\n    `State after \"${buttonValue}\": operator: ${selectedOperator}, total: ${runningTotal}, operand: ${currentOperand}, last action: ${lastAction}`\n  );\n}\n\nfunction inputHandler(buttonValue) {\n  if (Button.isNumber(buttonValue)) {\n    handleNumber(buttonValue);\n  } else if (Button.isOperator(buttonValue)) {\n    handleOperator(buttonValue);\n  } else if (buttonValue == Button.CLEAR) {\n    clear();\n  } else if (buttonValue == Button.BACKSPACE) {\n    backspace();\n  } else if (buttonValue == Button.EQUALS) {\n    equals();\n  } else {\n    alert(`Error: operator \"${buttonValue}\" is not valid.`);\n  }\n}\n"],"names":["$6411b0161a997a91$export$353f5b6fc5456de1","Object","freeze","ADD","SUBTRACT","MULTIPLY","DIVIDE","CLEAR","BACKSPACE","EQUALS","isOperator","value","this","includes","isNumber","length","isNaN","parseInt","$9524bea046020db5$var$selectedOperator","$9524bea046020db5$var$runningTotal","$9524bea046020db5$var$currentOperand","$9524bea046020db5$var$lastAction","$9524bea046020db5$var$outputValue","$9524bea046020db5$var$output","document","querySelector","$9524bea046020db5$var$clear","undefined","$9524bea046020db5$var$execute","Math","floor","alert","toString","addEventListener","event","buttonValue","target","tagName","inputValue","$9524bea046020db5$var$handleOperator","slice","$9524bea046020db5$var$inputHandler","substr","innerText","console","log"],"version":3,"file":"index.648c69bd.js.map"}