{"mappings":"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","sources":["src/button.js","node_modules/decimal.js/decimal.js","node_modules/xstate/es/_virtual/_tslib.js","node_modules/xstate/es/types.js","node_modules/xstate/es/actionTypes.js","node_modules/xstate/es/utils.js","node_modules/xstate/es/constants.js","node_modules/xstate/es/actions.js","node_modules/xstate/es/stateUtils.js","node_modules/xstate/es/State.js","node_modules/xstate/es/scheduler.js","node_modules/xstate/es/serviceScope.js","node_modules/xstate/es/Actor.js","node_modules/xstate/es/registry.js","node_modules/xstate/es/devTools.js","node_modules/xstate/es/behaviors.js","node_modules/xstate/es/interpreter.js","node_modules/xstate/es/invokeUtils.js","node_modules/xstate/es/StateNode.js","node_modules/xstate/es/index.js","src/calculatorState.js","node_modules/xstate/es/Machine.js","src/calculator.js"],"sourcesContent":["// Enum object for button tag values\nexport const Button = Object.freeze({\n  // Operators\n  ADD: \"add\",\n  SUBTRACT: \"subtract\",\n  MULTIPLY: \"multiply\",\n  DIVIDE: \"divide\",\n  // Other buttons\n  CLEAR: \"clear\",\n  BACKSPACE: \"back\",\n  EQUALS: \"equals\",\n  DECIMAL: \"decimal\",\n\n  isOperator(value) {\n    return [this.ADD, this.SUBTRACT, this.MULTIPLY, this.DIVIDE].includes(\n      value\n    );\n  },\n\n  isNumber(value) {\n    return value.length == 1 && !isNaN(parseInt(value));\n  },\n\n  isInput(value) {\n    return (\n      [this.BACKSPACE, this.DECIMAL].includes(value) || this.isNumber(value)\n    );\n  },\n\n  toString(value) {\n    switch (value) {\n      case Button.ADD:\n        return \"+\";\n      case Button.SUBTRACT:\n        return \"-\";\n      case Button.MULTIPLY:\n        return \"×\";\n      case Button.DIVIDE:\n        return \"÷\";\n      default:\n        console.error(\"Unkown operator error\");\n    }\n  },\n});\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\n\nexport { __assign, __read, __rest, __spreadArray, __values };\n","var ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"Start\"] = \"xstate.start\";\n  ActionTypes[\"Stop\"] = \"xstate.stop\";\n  ActionTypes[\"Raise\"] = \"xstate.raise\";\n  ActionTypes[\"Send\"] = \"xstate.send\";\n  ActionTypes[\"Cancel\"] = \"xstate.cancel\";\n  ActionTypes[\"NullEvent\"] = \"\";\n  ActionTypes[\"Assign\"] = \"xstate.assign\";\n  ActionTypes[\"After\"] = \"xstate.after\";\n  ActionTypes[\"DoneState\"] = \"done.state\";\n  ActionTypes[\"DoneInvoke\"] = \"done.invoke\";\n  ActionTypes[\"Log\"] = \"xstate.log\";\n  ActionTypes[\"Init\"] = \"xstate.init\";\n  ActionTypes[\"Invoke\"] = \"xstate.invoke\";\n  ActionTypes[\"ErrorExecution\"] = \"error.execution\";\n  ActionTypes[\"ErrorCommunication\"] = \"error.communication\";\n  ActionTypes[\"ErrorPlatform\"] = \"error.platform\";\n  ActionTypes[\"ErrorCustom\"] = \"xstate.error\";\n  ActionTypes[\"Update\"] = \"xstate.update\";\n  ActionTypes[\"Pure\"] = \"xstate.pure\";\n  ActionTypes[\"Choose\"] = \"xstate.choose\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar SpecialTargets;\n\n(function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n})(SpecialTargets || (SpecialTargets = {}));\n\nexport { ActionTypes, SpecialTargets };\n","import { ActionTypes } from './types.js';\n\nvar start = ActionTypes.Start;\nvar stop = ActionTypes.Stop;\nvar raise = ActionTypes.Raise;\nvar send = ActionTypes.Send;\nvar cancel = ActionTypes.Cancel;\nvar nullEvent = ActionTypes.NullEvent;\nvar assign = ActionTypes.Assign;\nvar after = ActionTypes.After;\nvar doneState = ActionTypes.DoneState;\nvar log = ActionTypes.Log;\nvar init = ActionTypes.Init;\nvar invoke = ActionTypes.Invoke;\nvar errorExecution = ActionTypes.ErrorExecution;\nvar errorPlatform = ActionTypes.ErrorPlatform;\nvar error = ActionTypes.ErrorCustom;\nvar update = ActionTypes.Update;\nvar choose = ActionTypes.Choose;\nvar pure = ActionTypes.Pure;\n\nexport { after, assign, cancel, choose, doneState, error, errorExecution, errorPlatform, init, invoke, log, nullEvent, pure, raise, send, start, stop, update };\n","import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { DEFAULT_GUARD_TYPE, TARGETLESS_KEY, STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nvar _a;\nfunction keys(value) {\n  return Object.keys(value);\n}\nfunction matchesState(parentStateId, childStateId, delimiter) {\n  if (delimiter === void 0) {\n    delimiter = STATE_DELIMITER;\n  }\n\n  var parentStateValue = toStateValue(parentStateId, delimiter);\n  var childStateValue = toStateValue(childStateId, delimiter);\n\n  if (isString(childStateValue)) {\n    if (isString(parentStateValue)) {\n      return childStateValue === parentStateValue;\n    } // Parent more specific than child\n\n\n    return false;\n  }\n\n  if (isString(parentStateValue)) {\n    return parentStateValue in childStateValue;\n  }\n\n  return Object.keys(parentStateValue).every(function (key) {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\nfunction getEventType(event) {\n  try {\n    return isString(event) || typeof event === 'number' ? \"\".concat(event) : event.type;\n  } catch (e) {\n    throw new Error('Events must be strings or objects with a string event.type property.');\n  }\n}\nfunction getActionType(action) {\n  try {\n    return isString(action) || typeof action === 'number' ? \"\".concat(action) : isFunction(action) ? action.name : action.type;\n  } catch (e) {\n    throw new Error('Actions must be strings or objects with a string action.type property.');\n  }\n}\nfunction toStatePath(stateId, delimiter) {\n  try {\n    if (isArray(stateId)) {\n      return stateId;\n    }\n\n    return stateId.toString().split(delimiter);\n  } catch (e) {\n    throw new Error(\"'\".concat(stateId, \"' is not a valid state path.\"));\n  }\n}\nfunction isStateLike(state) {\n  return typeof state === 'object' && 'value' in state && 'context' in state && 'event' in state && '_event' in state;\n}\nfunction toStateValue(stateValue, delimiter) {\n  if (isStateLike(stateValue)) {\n    return stateValue.value;\n  }\n\n  if (isArray(stateValue)) {\n    return pathToStateValue(stateValue);\n  }\n\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n\n  var statePath = toStatePath(stateValue, delimiter);\n  return pathToStateValue(statePath);\n}\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n\n  var value = {};\n  var marker = value;\n\n  for (var i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      marker[statePath[i]] = {};\n      marker = marker[statePath[i]];\n    }\n  }\n\n  return value;\n}\nfunction mapValues(collection, iteratee) {\n  var result = {};\n  var collectionKeys = Object.keys(collection);\n\n  for (var i = 0; i < collectionKeys.length; i++) {\n    var key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n\n  return result;\n}\nfunction mapFilterValues(collection, iteratee, predicate) {\n  var e_1, _a;\n\n  var result = {};\n\n  try {\n    for (var _b = __values(Object.keys(collection)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var item = collection[key];\n\n      if (!predicate(item)) {\n        continue;\n      }\n\n      result[key] = iteratee(item, key, collection);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Retrieves a value at the given path.\r\n * @param props The deep path to the prop of the desired value\r\n */\n\nvar path = function (props) {\n  return function (object) {\n    var e_2, _a;\n\n    var result = object;\n\n    try {\n      for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n        var prop = props_1_1.value;\n        result = result[prop];\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return result;\n  };\n};\n/**\r\n * Retrieves a value at the given path via the nested accessor prop.\r\n * @param props The deep path to the prop of the desired value\r\n */\n\nfunction nestedPath(props, accessorProp) {\n  return function (object) {\n    var e_3, _a;\n\n    var result = object;\n\n    try {\n      for (var props_2 = __values(props), props_2_1 = props_2.next(); !props_2_1.done; props_2_1 = props_2.next()) {\n        var prop = props_2_1.value;\n        result = result[accessorProp][prop];\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (props_2_1 && !props_2_1.done && (_a = props_2.return)) _a.call(props_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n}\nfunction toStatePaths(stateValue) {\n  if (!stateValue) {\n    return [[]];\n  }\n\n  if (isString(stateValue)) {\n    return [[stateValue]];\n  }\n\n  var result = flatten(Object.keys(stateValue).map(function (key) {\n    var subStateValue = stateValue[key];\n\n    if (typeof subStateValue !== 'string' && (!subStateValue || !Object.keys(subStateValue).length)) {\n      return [[key]];\n    }\n\n    return toStatePaths(stateValue[key]).map(function (subPath) {\n      return [key].concat(subPath);\n    });\n  }));\n  return result;\n}\nfunction pathsToStateValue(paths) {\n  var e_4, _a;\n\n  var result = {};\n\n  if (paths && paths.length === 1 && paths[0].length === 1) {\n    return paths[0][0];\n  }\n\n  try {\n    for (var paths_1 = __values(paths), paths_1_1 = paths_1.next(); !paths_1_1.done; paths_1_1 = paths_1.next()) {\n      var currentPath = paths_1_1.value;\n      var marker = result; // tslint:disable-next-line:prefer-for-of\n\n      for (var i = 0; i < currentPath.length; i++) {\n        var subPath = currentPath[i];\n\n        if (i === currentPath.length - 2) {\n          marker[subPath] = currentPath[i + 1];\n          break;\n        }\n\n        marker[subPath] = marker[subPath] || {};\n        marker = marker[subPath];\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (paths_1_1 && !paths_1_1.done && (_a = paths_1.return)) _a.call(paths_1);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return result;\n}\nfunction flatten(array) {\n  var _a;\n\n  return (_a = []).concat.apply(_a, __spreadArray([], __read(array), false));\n}\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return [value];\n}\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n\n  return toArrayStrict(value);\n}\nfunction mapContext(mapper, context, _event) {\n  var e_5, _a;\n\n  if (isFunction(mapper)) {\n    return mapper(context, _event.data);\n  }\n\n  var result = {};\n\n  try {\n    for (var _b = __values(Object.keys(mapper)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var subMapper = mapper[key];\n\n      if (isFunction(subMapper)) {\n        result[key] = subMapper(context, _event.data);\n      } else {\n        result[key] = subMapper;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return result;\n}\nfunction isBuiltInEvent(eventType) {\n  return /^(done|error)\\./.test(eventType);\n}\nfunction isPromiseLike(value) {\n  if (value instanceof Promise) {\n    return true;\n  } // Check if shape matches the Promise/A+ specification for a \"thenable\".\n\n\n  if (value !== null && (isFunction(value) || typeof value === 'object') && isFunction(value.then)) {\n    return true;\n  }\n\n  return false;\n}\nfunction isBehavior(value) {\n  return value !== null && typeof value === 'object' && 'transition' in value && typeof value.transition === 'function';\n}\nfunction partition(items, predicate) {\n  var e_6, _a;\n\n  var _b = __read([[], []], 2),\n      truthy = _b[0],\n      falsy = _b[1];\n\n  try {\n    for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n      var item = items_1_1.value;\n\n      if (predicate(item)) {\n        truthy.push(item);\n      } else {\n        falsy.push(item);\n      }\n    }\n  } catch (e_6_1) {\n    e_6 = {\n      error: e_6_1\n    };\n  } finally {\n    try {\n      if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n    } finally {\n      if (e_6) throw e_6.error;\n    }\n  }\n\n  return [truthy, falsy];\n}\nfunction updateHistoryStates(hist, stateValue) {\n  return mapValues(hist.states, function (subHist, key) {\n    if (!subHist) {\n      return undefined;\n    }\n\n    var subStateValue = (isString(stateValue) ? undefined : stateValue[key]) || (subHist ? subHist.current : undefined);\n\n    if (!subStateValue) {\n      return undefined;\n    }\n\n    return {\n      current: subStateValue,\n      states: updateHistoryStates(subHist, subStateValue)\n    };\n  });\n}\nfunction updateHistoryValue(hist, stateValue) {\n  return {\n    current: stateValue,\n    states: updateHistoryStates(hist, stateValue)\n  };\n}\nfunction updateContext(context, _event, assignActions, state) {\n  if (!IS_PRODUCTION) {\n    warn(!!context, 'Attempting to update undefined context');\n  }\n\n  var updatedContext = context ? assignActions.reduce(function (acc, assignAction) {\n    var e_7, _a;\n\n    var assignment = assignAction.assignment;\n    var meta = {\n      state: state,\n      action: assignAction,\n      _event: _event\n    };\n    var partialUpdate = {};\n\n    if (isFunction(assignment)) {\n      partialUpdate = assignment(acc, _event.data, meta);\n    } else {\n      try {\n        for (var _b = __values(Object.keys(assignment)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var key = _c.value;\n          var propAssignment = assignment[key];\n          partialUpdate[key] = isFunction(propAssignment) ? propAssignment(acc, _event.data, meta) : propAssignment;\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    }\n\n    return Object.assign({}, acc, partialUpdate);\n  }, context) : context;\n  return updatedContext;\n} // tslint:disable-next-line:no-empty\n\nvar warn = function () {};\n\nif (!IS_PRODUCTION) {\n  warn = function (condition, message) {\n    var error = condition instanceof Error ? condition : undefined;\n\n    if (!error && condition) {\n      return;\n    }\n\n    if (console !== undefined) {\n      var args = [\"Warning: \".concat(message)];\n\n      if (error) {\n        args.push(error);\n      } // tslint:disable-next-line:no-console\n\n\n      console.warn.apply(console, args);\n    }\n  };\n}\nfunction isArray(value) {\n  return Array.isArray(value);\n} // tslint:disable-next-line:ban-types\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\nfunction isString(value) {\n  return typeof value === 'string';\n}\nfunction toGuard(condition, guardMap) {\n  if (!condition) {\n    return undefined;\n  }\n\n  if (isString(condition)) {\n    return {\n      type: DEFAULT_GUARD_TYPE,\n      name: condition,\n      predicate: guardMap ? guardMap[condition] : undefined\n    };\n  }\n\n  if (isFunction(condition)) {\n    return {\n      type: DEFAULT_GUARD_TYPE,\n      name: condition.name,\n      predicate: condition\n    };\n  }\n\n  return condition;\n}\nfunction isObservable(value) {\n  try {\n    return 'subscribe' in value && isFunction(value.subscribe);\n  } catch (e) {\n    return false;\n  }\n}\nvar symbolObservable = /*#__PURE__*/function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}(); // TODO: to be removed in v5, left it out just to minimize the scope of the change and maintain compatibility with older versions of integration paackages\n\nvar interopSymbols = (_a = {}, _a[symbolObservable] = function () {\n  return this;\n}, _a[Symbol.observable] = function () {\n  return this;\n}, _a);\nfunction isMachine(value) {\n  return !!value && '__xstatenode' in value;\n}\nfunction isActor(value) {\n  return !!value && typeof value.send === 'function';\n}\nvar uniqueId = /*#__PURE__*/function () {\n  var currentId = 0;\n  return function () {\n    currentId++;\n    return currentId.toString(16);\n  };\n}();\nfunction toEventObject(event, payload // id?: TEvent['type']\n) {\n  if (isString(event) || typeof event === 'number') {\n    return __assign({\n      type: event\n    }, payload);\n  }\n\n  return event;\n}\nfunction toSCXMLEvent(event, scxmlEvent) {\n  if (!isString(event) && '$$type' in event && event.$$type === 'scxml') {\n    return event;\n  }\n\n  var eventObject = toEventObject(event);\n  return __assign({\n    name: eventObject.type,\n    data: eventObject,\n    $$type: 'scxml',\n    type: 'external'\n  }, scxmlEvent);\n}\nfunction toTransitionConfigArray(event, configLike) {\n  var transitions = toArrayStrict(configLike).map(function (transitionLike) {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string' || isMachine(transitionLike)) {\n      return {\n        target: transitionLike,\n        event: event\n      };\n    }\n\n    return __assign(__assign({}, transitionLike), {\n      event: event\n    });\n  });\n  return transitions;\n}\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n\n  return toArray(target);\n}\nfunction reportUnhandledExceptionOnInvocation(originalError, currentError, id) {\n  if (!IS_PRODUCTION) {\n    var originalStackTrace = originalError.stack ? \" Stacktrace was '\".concat(originalError.stack, \"'\") : '';\n\n    if (originalError === currentError) {\n      // tslint:disable-next-line:no-console\n      console.error(\"Missing onError handler for invocation '\".concat(id, \"', error was '\").concat(originalError, \"'.\").concat(originalStackTrace));\n    } else {\n      var stackTrace = currentError.stack ? \" Stacktrace was '\".concat(currentError.stack, \"'\") : ''; // tslint:disable-next-line:no-console\n\n      console.error(\"Missing onError handler and/or unhandled exception/promise rejection for invocation '\".concat(id, \"'. \") + \"Original error: '\".concat(originalError, \"'. \").concat(originalStackTrace, \" Current error is '\").concat(currentError, \"'.\").concat(stackTrace));\n    }\n  }\n}\nfunction evaluateGuard(machine, guard, context, _event, state) {\n  var guards = machine.options.guards;\n  var guardMeta = {\n    state: state,\n    cond: guard,\n    _event: _event\n  }; // TODO: do not hardcode!\n\n  if (guard.type === DEFAULT_GUARD_TYPE) {\n    return ((guards === null || guards === void 0 ? void 0 : guards[guard.name]) || guard.predicate)(context, _event.data, guardMeta);\n  }\n\n  var condFn = guards === null || guards === void 0 ? void 0 : guards[guard.type];\n\n  if (!condFn) {\n    throw new Error(\"Guard '\".concat(guard.type, \"' is not implemented on machine '\").concat(machine.id, \"'.\"));\n  }\n\n  return condFn(context, _event.data, guardMeta);\n}\nfunction toInvokeSource(src) {\n  if (typeof src === 'string') {\n    return {\n      type: src\n    };\n  }\n\n  return src;\n}\nfunction toObserver(nextHandler, errorHandler, completionHandler) {\n  var noop = function () {};\n\n  var isObserver = typeof nextHandler === 'object';\n  var self = isObserver ? nextHandler : null;\n  return {\n    next: ((isObserver ? nextHandler.next : nextHandler) || noop).bind(self),\n    error: ((isObserver ? nextHandler.error : errorHandler) || noop).bind(self),\n    complete: ((isObserver ? nextHandler.complete : completionHandler) || noop).bind(self)\n  };\n}\nfunction createInvokeId(stateNodeId, index) {\n  return \"\".concat(stateNodeId, \":invocation[\").concat(index, \"]\");\n}\n\nexport { createInvokeId, evaluateGuard, flatten, getActionType, getEventType, interopSymbols, isActor, isArray, isBehavior, isBuiltInEvent, isFunction, isMachine, isObservable, isPromiseLike, isStateLike, isString, keys, mapContext, mapFilterValues, mapValues, matchesState, nestedPath, normalizeTarget, partition, path, pathToStateValue, pathsToStateValue, reportUnhandledExceptionOnInvocation, symbolObservable, toArray, toArrayStrict, toEventObject, toGuard, toInvokeSource, toObserver, toSCXMLEvent, toStatePath, toStatePaths, toStateValue, toTransitionConfigArray, uniqueId, updateContext, updateHistoryStates, updateHistoryValue, warn };\n","var STATE_DELIMITER = '.';\nvar EMPTY_ACTIVITY_MAP = {};\nvar DEFAULT_GUARD_TYPE = 'xstate.guard';\nvar TARGETLESS_KEY = '';\n\nexport { DEFAULT_GUARD_TYPE, EMPTY_ACTIVITY_MAP, STATE_DELIMITER, TARGETLESS_KEY };\n","import { __assign, __spreadArray, __read, __values } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { init, send as send$1, raise as raise$1, update, log as log$1, cancel as cancel$1, assign as assign$1, error as error$1, stop as stop$1, pure as pure$1, choose as choose$1 } from './actionTypes.js';\nimport * as actionTypes from './actionTypes.js';\nexport { actionTypes };\nimport { toSCXMLEvent, isString, isFunction, toEventObject, getEventType, updateContext, flatten, isArray, toArray, toGuard, evaluateGuard, warn } from './utils.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nvar initEvent = /*#__PURE__*/toSCXMLEvent({\n  type: init\n});\nfunction getActionFunction(actionType, actionFunctionMap) {\n  return actionFunctionMap ? actionFunctionMap[actionType] || undefined : undefined;\n}\nfunction toActionObject(action, actionFunctionMap) {\n  var actionObject;\n\n  if (isString(action) || typeof action === 'number') {\n    var exec = getActionFunction(action, actionFunctionMap);\n\n    if (isFunction(exec)) {\n      actionObject = {\n        type: action,\n        exec: exec\n      };\n    } else if (exec) {\n      actionObject = exec;\n    } else {\n      actionObject = {\n        type: action,\n        exec: undefined\n      };\n    }\n  } else if (isFunction(action)) {\n    actionObject = {\n      // Convert action to string if unnamed\n      type: action.name || action.toString(),\n      exec: action\n    };\n  } else {\n    var exec = getActionFunction(action.type, actionFunctionMap);\n\n    if (isFunction(exec)) {\n      actionObject = __assign(__assign({}, action), {\n        exec: exec\n      });\n    } else if (exec) {\n      var actionType = exec.type || action.type;\n      actionObject = __assign(__assign(__assign({}, exec), action), {\n        type: actionType\n      });\n    } else {\n      actionObject = action;\n    }\n  }\n\n  return actionObject;\n}\nvar toActionObjects = function (action, actionFunctionMap) {\n  if (!action) {\n    return [];\n  }\n\n  var actions = isArray(action) ? action : [action];\n  return actions.map(function (subAction) {\n    return toActionObject(subAction, actionFunctionMap);\n  });\n};\nfunction toActivityDefinition(action) {\n  var actionObject = toActionObject(action);\n  return __assign(__assign({\n    id: isString(action) ? action : actionObject.id\n  }, actionObject), {\n    type: actionObject.type\n  });\n}\n/**\r\n * Raises an event. This places the event in the internal event queue, so that\r\n * the event is immediately consumed by the machine in the current step.\r\n *\r\n * @param eventType The event to raise.\r\n */\n\nfunction raise(event) {\n  if (!isString(event)) {\n    return send(event, {\n      to: SpecialTargets.Internal\n    });\n  }\n\n  return {\n    type: raise$1,\n    event: event\n  };\n}\nfunction resolveRaise(action) {\n  return {\n    type: raise$1,\n    _event: toSCXMLEvent(action.event)\n  };\n}\n/**\r\n * Sends an event. This returns an action that will be read by an interpreter to\r\n * send the event in the next step, after the current step is finished executing.\r\n *\r\n * @param event The event to send.\r\n * @param options Options to pass into the send event:\r\n *  - `id` - The unique send event identifier (used with `cancel()`).\r\n *  - `delay` - The number of milliseconds to delay the sending of the event.\r\n *  - `to` - The target of this event (by default, the machine the event was sent from).\r\n */\n\nfunction send(event, options) {\n  return {\n    to: options ? options.to : undefined,\n    type: send$1,\n    event: isFunction(event) ? event : toEventObject(event),\n    delay: options ? options.delay : undefined,\n    id: options && options.id !== undefined ? options.id : isFunction(event) ? event.name : getEventType(event)\n  };\n}\nfunction resolveSend(action, ctx, _event, delaysMap) {\n  var meta = {\n    _event: _event\n  }; // TODO: helper function for resolving Expr\n\n  var resolvedEvent = toSCXMLEvent(isFunction(action.event) ? action.event(ctx, _event.data, meta) : action.event);\n  var resolvedDelay;\n\n  if (isString(action.delay)) {\n    var configDelay = delaysMap && delaysMap[action.delay];\n    resolvedDelay = isFunction(configDelay) ? configDelay(ctx, _event.data, meta) : configDelay;\n  } else {\n    resolvedDelay = isFunction(action.delay) ? action.delay(ctx, _event.data, meta) : action.delay;\n  }\n\n  var resolvedTarget = isFunction(action.to) ? action.to(ctx, _event.data, meta) : action.to;\n  return __assign(__assign({}, action), {\n    to: resolvedTarget,\n    _event: resolvedEvent,\n    event: resolvedEvent.data,\n    delay: resolvedDelay\n  });\n}\n/**\r\n * Sends an event to this machine's parent.\r\n *\r\n * @param event The event to send to the parent machine.\r\n * @param options Options to pass into the send event.\r\n */\n\nfunction sendParent(event, options) {\n  return send(event, __assign(__assign({}, options), {\n    to: SpecialTargets.Parent\n  }));\n}\n/**\r\n * Sends an event to an actor.\r\n *\r\n * @param actor The `ActorRef` to send the event to.\r\n * @param event The event to send, or an expression that evaluates to the event to send\r\n * @param options Send action options\r\n * @returns An XState send action object\r\n */\n\nfunction sendTo(actor, event, options) {\n  return send(event, __assign(__assign({}, options), {\n    to: actor\n  }));\n}\n/**\r\n * Sends an update event to this machine's parent.\r\n */\n\nfunction sendUpdate() {\n  return sendParent(update);\n}\n/**\r\n * Sends an event back to the sender of the original event.\r\n *\r\n * @param event The event to send back to the sender\r\n * @param options Options to pass into the send event\r\n */\n\nfunction respond(event, options) {\n  return send(event, __assign(__assign({}, options), {\n    to: function (_, __, _a) {\n      var _event = _a._event;\n      return _event.origin; // TODO: handle when _event.origin is undefined\n    }\n  }));\n}\n\nvar defaultLogExpr = function (context, event) {\n  return {\n    context: context,\n    event: event\n  };\n};\n/**\r\n *\r\n * @param expr The expression function to evaluate which will be logged.\r\n *  Takes in 2 arguments:\r\n *  - `ctx` - the current state context\r\n *  - `event` - the event that caused this action to be executed.\r\n * @param label The label to give to the logged expression.\r\n */\n\n\nfunction log(expr, label) {\n  if (expr === void 0) {\n    expr = defaultLogExpr;\n  }\n\n  return {\n    type: log$1,\n    label: label,\n    expr: expr\n  };\n}\nvar resolveLog = function (action, ctx, _event) {\n  return __assign(__assign({}, action), {\n    value: isString(action.expr) ? action.expr : action.expr(ctx, _event.data, {\n      _event: _event\n    })\n  });\n};\n/**\r\n * Cancels an in-flight `send(...)` action. A canceled sent action will not\r\n * be executed, nor will its event be sent, unless it has already been sent\r\n * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).\r\n *\r\n * @param sendId The `id` of the `send(...)` action to cancel.\r\n */\n\nvar cancel = function (sendId) {\n  return {\n    type: cancel$1,\n    sendId: sendId\n  };\n};\n/**\r\n * Starts an activity.\r\n *\r\n * @param activity The activity to start.\r\n */\n\nfunction start(activity) {\n  var activityDef = toActivityDefinition(activity);\n  return {\n    type: ActionTypes.Start,\n    activity: activityDef,\n    exec: undefined\n  };\n}\n/**\r\n * Stops an activity.\r\n *\r\n * @param actorRef The activity to stop.\r\n */\n\nfunction stop(actorRef) {\n  var activity = isFunction(actorRef) ? actorRef : toActivityDefinition(actorRef);\n  return {\n    type: ActionTypes.Stop,\n    activity: activity,\n    exec: undefined\n  };\n}\nfunction resolveStop(action, context, _event) {\n  var actorRefOrString = isFunction(action.activity) ? action.activity(context, _event.data) : action.activity;\n  var resolvedActorRef = typeof actorRefOrString === 'string' ? {\n    id: actorRefOrString\n  } : actorRefOrString;\n  var actionObject = {\n    type: ActionTypes.Stop,\n    activity: resolvedActorRef\n  };\n  return actionObject;\n}\n/**\r\n * Updates the current context of the machine.\r\n *\r\n * @param assignment An object that represents the partial context to update.\r\n */\n\nvar assign = function (assignment) {\n  return {\n    type: assign$1,\n    assignment: assignment\n  };\n};\nfunction isActionObject(action) {\n  return typeof action === 'object' && 'type' in action;\n}\n/**\r\n * Returns an event type that represents an implicit event that\r\n * is sent after the specified `delay`.\r\n *\r\n * @param delayRef The delay in milliseconds\r\n * @param id The state node ID where this event is handled\r\n */\n\nfunction after(delayRef, id) {\n  var idSuffix = id ? \"#\".concat(id) : '';\n  return \"\".concat(ActionTypes.After, \"(\").concat(delayRef, \")\").concat(idSuffix);\n}\n/**\r\n * Returns an event that represents that a final state node\r\n * has been reached in the parent state node.\r\n *\r\n * @param id The final state node's parent state node `id`\r\n * @param data The data to pass into the event\r\n */\n\nfunction done(id, data) {\n  var type = \"\".concat(ActionTypes.DoneState, \".\").concat(id);\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\n/**\r\n * Returns an event that represents that an invoked service has terminated.\r\n *\r\n * An invoked service is terminated when it has reached a top-level final state node,\r\n * but not when it is canceled.\r\n *\r\n * @param id The final state node ID\r\n * @param data The data to pass into the event\r\n */\n\nfunction doneInvoke(id, data) {\n  var type = \"\".concat(ActionTypes.DoneInvoke, \".\").concat(id);\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\nfunction error(id, data) {\n  var type = \"\".concat(ActionTypes.ErrorPlatform, \".\").concat(id);\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\nfunction pure(getActions) {\n  return {\n    type: ActionTypes.Pure,\n    get: getActions\n  };\n}\n/**\r\n * Forwards (sends) an event to a specified service.\r\n *\r\n * @param target The target service to forward the event to.\r\n * @param options Options to pass into the send action creator.\r\n */\n\nfunction forwardTo(target, options) {\n  if (!IS_PRODUCTION && (!target || typeof target === 'function')) {\n    var originalTarget_1 = target;\n\n    target = function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var resolvedTarget = typeof originalTarget_1 === 'function' ? originalTarget_1.apply(void 0, __spreadArray([], __read(args), false)) : originalTarget_1;\n\n      if (!resolvedTarget) {\n        throw new Error(\"Attempted to forward event to undefined actor. This risks an infinite loop in the sender.\");\n      }\n\n      return resolvedTarget;\n    };\n  }\n\n  return send(function (_, event) {\n    return event;\n  }, __assign(__assign({}, options), {\n    to: target\n  }));\n}\n/**\r\n * Escalates an error by sending it as an event to this machine's parent.\r\n *\r\n * @param errorData The error data to send, or the expression function that\r\n * takes in the `context`, `event`, and `meta`, and returns the error data to send.\r\n * @param options Options to pass into the send action creator.\r\n */\n\nfunction escalate(errorData, options) {\n  return sendParent(function (context, event, meta) {\n    return {\n      type: error$1,\n      data: isFunction(errorData) ? errorData(context, event, meta) : errorData\n    };\n  }, __assign(__assign({}, options), {\n    to: SpecialTargets.Parent\n  }));\n}\nfunction choose(conds) {\n  return {\n    type: ActionTypes.Choose,\n    conds: conds\n  };\n}\n\nvar pluckAssigns = function (actionBlocks) {\n  var e_1, _a;\n\n  var assignActions = [];\n\n  try {\n    for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n      var block = actionBlocks_1_1.value;\n      var i = 0;\n\n      while (i < block.actions.length) {\n        if (block.actions[i].type === assign$1) {\n          assignActions.push(block.actions[i]);\n          block.actions.splice(i, 1);\n          continue;\n        }\n\n        i++;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return assignActions;\n};\n\nfunction resolveActions(machine, currentState, currentContext, _event, actionBlocks, predictableExec, preserveActionOrder) {\n  if (preserveActionOrder === void 0) {\n    preserveActionOrder = false;\n  }\n\n  var assignActions = preserveActionOrder ? [] : pluckAssigns(actionBlocks);\n  var updatedContext = assignActions.length ? updateContext(currentContext, _event, assignActions, currentState) : currentContext;\n  var preservedContexts = preserveActionOrder ? [currentContext] : undefined;\n  var deferredToBlockEnd = [];\n\n  function handleAction(blockType, actionObject) {\n    var _a;\n\n    switch (actionObject.type) {\n      case raise$1:\n        {\n          return resolveRaise(actionObject);\n        }\n\n      case send$1:\n        var sendAction = resolveSend(actionObject, updatedContext, _event, machine.options.delays); // TODO: fix ActionTypes.Init\n\n        if (!IS_PRODUCTION) {\n          // warn after resolving as we can create better contextual message here\n          warn(!isString(actionObject.delay) || typeof sendAction.delay === 'number', // tslint:disable-next-line:max-line-length\n          \"No delay reference for delay expression '\".concat(actionObject.delay, \"' was found on machine '\").concat(machine.id, \"'\"));\n        }\n\n        if (predictableExec && sendAction.to !== SpecialTargets.Internal) {\n          if (blockType === 'entry') {\n            deferredToBlockEnd.push(sendAction);\n          } else {\n            predictableExec === null || predictableExec === void 0 ? void 0 : predictableExec(sendAction, updatedContext, _event);\n          }\n        }\n\n        return sendAction;\n\n      case log$1:\n        {\n          var resolved = resolveLog(actionObject, updatedContext, _event);\n          predictableExec === null || predictableExec === void 0 ? void 0 : predictableExec(resolved, updatedContext, _event);\n          return resolved;\n        }\n\n      case choose$1:\n        {\n          var chooseAction = actionObject;\n          var matchedActions = (_a = chooseAction.conds.find(function (condition) {\n            var guard = toGuard(condition.cond, machine.options.guards);\n            return !guard || evaluateGuard(machine, guard, updatedContext, _event, !predictableExec ? currentState : undefined);\n          })) === null || _a === void 0 ? void 0 : _a.actions;\n\n          if (!matchedActions) {\n            return [];\n          }\n\n          var _b = __read(resolveActions(machine, currentState, updatedContext, _event, [{\n            type: blockType,\n            actions: toActionObjects(toArray(matchedActions), machine.options.actions)\n          }], predictableExec, preserveActionOrder), 2),\n              resolvedActionsFromChoose = _b[0],\n              resolvedContextFromChoose = _b[1];\n\n          updatedContext = resolvedContextFromChoose;\n          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);\n          return resolvedActionsFromChoose;\n        }\n\n      case pure$1:\n        {\n          var matchedActions = actionObject.get(updatedContext, _event.data);\n\n          if (!matchedActions) {\n            return [];\n          }\n\n          var _c = __read(resolveActions(machine, currentState, updatedContext, _event, [{\n            type: blockType,\n            actions: toActionObjects(toArray(matchedActions), machine.options.actions)\n          }], predictableExec, preserveActionOrder), 2),\n              resolvedActionsFromPure = _c[0],\n              resolvedContext = _c[1];\n\n          updatedContext = resolvedContext;\n          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);\n          return resolvedActionsFromPure;\n        }\n\n      case stop$1:\n        {\n          var resolved = resolveStop(actionObject, updatedContext, _event);\n          predictableExec === null || predictableExec === void 0 ? void 0 : predictableExec(resolved, currentContext, _event);\n          return resolved;\n        }\n\n      case assign$1:\n        {\n          updatedContext = updateContext(updatedContext, _event, [actionObject], !predictableExec ? currentState : undefined);\n          preservedContexts === null || preservedContexts === void 0 ? void 0 : preservedContexts.push(updatedContext);\n          break;\n        }\n\n      default:\n        var resolvedActionObject = toActionObject(actionObject, machine.options.actions);\n        var exec_1 = resolvedActionObject.exec;\n\n        if (predictableExec) {\n          predictableExec(resolvedActionObject, updatedContext, _event);\n        } else if (exec_1 && preservedContexts) {\n          var contextIndex_1 = preservedContexts.length - 1;\n          resolvedActionObject = __assign(__assign({}, resolvedActionObject), {\n            exec: function (_ctx) {\n              var args = [];\n\n              for (var _i = 1; _i < arguments.length; _i++) {\n                args[_i - 1] = arguments[_i];\n              }\n\n              exec_1.apply(void 0, __spreadArray([preservedContexts[contextIndex_1]], __read(args), false));\n            }\n          });\n        }\n\n        return resolvedActionObject;\n    }\n  }\n\n  function processBlock(block) {\n    var e_2, _a;\n\n    var resolvedActions = [];\n\n    try {\n      for (var _b = __values(block.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        var resolved = handleAction(block.type, action);\n\n        if (resolved) {\n          resolvedActions = resolvedActions.concat(resolved);\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    deferredToBlockEnd.forEach(function (action) {\n      predictableExec(action, updatedContext, _event);\n    });\n    deferredToBlockEnd.length = 0;\n    return resolvedActions;\n  }\n\n  var resolvedActions = flatten(actionBlocks.map(processBlock));\n  return [resolvedActions, updatedContext];\n}\n\nexport { after, assign, cancel, choose, done, doneInvoke, error, escalate, forwardTo, getActionFunction, initEvent, isActionObject, log, pure, raise, resolveActions, resolveLog, resolveRaise, resolveSend, resolveStop, respond, send, sendParent, sendTo, sendUpdate, start, stop, toActionObject, toActionObjects, toActivityDefinition };\n","import { __values, __spreadArray, __read } from './_virtual/_tslib.js';\nimport { flatten } from './utils.js';\n\nvar isLeafNode = function (stateNode) {\n  return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\nfunction getAllChildren(stateNode) {\n  return Object.keys(stateNode.states).map(function (key) {\n    return stateNode.states[key];\n  });\n}\nfunction getChildren(stateNode) {\n  return getAllChildren(stateNode).filter(function (sn) {\n    return sn.type !== 'history';\n  });\n}\nfunction getAllStateNodes(stateNode) {\n  var stateNodes = [stateNode];\n\n  if (isLeafNode(stateNode)) {\n    return stateNodes;\n  }\n\n  return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\nfunction getConfiguration(prevStateNodes, stateNodes) {\n  var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n\n  var prevConfiguration = new Set(prevStateNodes);\n  var prevAdjList = getAdjList(prevConfiguration);\n  var configuration = new Set(stateNodes);\n\n  try {\n    // add all ancestors\n    for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n      var s = configuration_1_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  var adjList = getAdjList(configuration);\n\n  try {\n    // add descendants\n    for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n      var s = configuration_2_1.value; // if previously active, add existing child nodes\n\n      if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n        if (prevAdjList.get(s)) {\n          prevAdjList.get(s).forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        } else {\n          s.initialStateNodes.forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        }\n      } else {\n        if (s.type === 'parallel') {\n          try {\n            for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var child = _f.value;\n\n              if (!configuration.has(child)) {\n                configuration.add(child);\n\n                if (prevAdjList.get(child)) {\n                  prevAdjList.get(child).forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                } else {\n                  child.initialStateNodes.forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                }\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  try {\n    // add all ancestors\n    for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n      var s = configuration_3_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return configuration;\n}\n\nfunction getValueFromAdj(baseNode, adjList) {\n  var childStateNodes = adjList.get(baseNode);\n\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    var childStateNode = childStateNodes[0];\n\n    if (childStateNode) {\n      if (isLeafNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n\n  var stateValue = {};\n  childStateNodes.forEach(function (csn) {\n    stateValue[csn.key] = getValueFromAdj(csn, adjList);\n  });\n  return stateValue;\n}\n\nfunction getAdjList(configuration) {\n  var e_5, _a;\n\n  var adjList = new Map();\n\n  try {\n    for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n      var s = configuration_4_1.value;\n\n      if (!adjList.has(s)) {\n        adjList.set(s, []);\n      }\n\n      if (s.parent) {\n        if (!adjList.has(s.parent)) {\n          adjList.set(s.parent, []);\n        }\n\n        adjList.get(s.parent).push(s);\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return adjList;\n}\nfunction getValue(rootNode, configuration) {\n  var config = getConfiguration([rootNode], configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\nfunction has(iterable, item) {\n  if (Array.isArray(iterable)) {\n    return iterable.some(function (member) {\n      return member === item;\n    });\n  }\n\n  if (iterable instanceof Set) {\n    return iterable.has(item);\n  }\n\n  return false; // TODO: fix\n}\nfunction nextEvents(configuration) {\n  return __spreadArray([], __read(new Set(flatten(__spreadArray([], __read(configuration.map(function (sn) {\n    return sn.ownEvents;\n  })), false)))), false);\n}\nfunction isInFinalState(configuration, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(function (s) {\n      return s.type === 'final' && has(configuration, s);\n    });\n  }\n\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(function (sn) {\n      return isInFinalState(configuration, sn);\n    });\n  }\n\n  return false;\n}\nfunction getMeta(configuration) {\n  if (configuration === void 0) {\n    configuration = [];\n  }\n\n  return configuration.reduce(function (acc, stateNode) {\n    if (stateNode.meta !== undefined) {\n      acc[stateNode.id] = stateNode.meta;\n    }\n\n    return acc;\n  }, {});\n}\nfunction getTagsFromConfiguration(configuration) {\n  return new Set(flatten(configuration.map(function (sn) {\n    return sn.tags;\n  })));\n}\n\nexport { getAdjList, getAllChildren, getAllStateNodes, getChildren, getConfiguration, getMeta, getTagsFromConfiguration, getValue, has, isInFinalState, isLeafNode, nextEvents };\n","import { __assign, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\nimport { EMPTY_ACTIVITY_MAP } from './constants.js';\nimport { isString, matchesState, warn } from './utils.js';\nimport { getMeta, nextEvents } from './stateUtils.js';\nimport { initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nfunction stateValuesEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n\n  if (isString(a) || isString(b)) {\n    return a === b;\n  }\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  return aKeys.length === bKeys.length && aKeys.every(function (key) {\n    return stateValuesEqual(a[key], b[key]);\n  });\n}\nfunction isStateConfig(state) {\n  if (typeof state !== 'object' || state === null) {\n    return false;\n  }\n\n  return 'value' in state && '_event' in state;\n}\n/**\r\n * @deprecated Use `isStateConfig(object)` or `state instanceof State` instead.\r\n */\n\nvar isState = isStateConfig;\nfunction bindActionToState(action, state) {\n  var exec = action.exec;\n\n  var boundAction = __assign(__assign({}, action), {\n    exec: exec !== undefined ? function () {\n      return exec(state.context, state.event, {\n        action: action,\n        state: state,\n        _event: state._event\n      });\n    } : undefined\n  });\n\n  return boundAction;\n}\n\nvar State =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new State instance.\r\n   * @param value The state value\r\n   * @param context The extended state\r\n   * @param historyValue The tree representing historical values of the state nodes\r\n   * @param history The previous state\r\n   * @param actions An array of action objects to execute as side-effects\r\n   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).\r\n   * @param meta\r\n   * @param events Internal event queue. Should be empty with run-to-completion semantics.\r\n   * @param configuration\r\n   */\n  function State(config) {\n    var _this = this;\n\n    var _a;\n\n    this.actions = [];\n    this.activities = EMPTY_ACTIVITY_MAP;\n    this.meta = {};\n    this.events = [];\n    this.value = config.value;\n    this.context = config.context;\n    this._event = config._event;\n    this._sessionid = config._sessionid;\n    this.event = this._event.data;\n    this.historyValue = config.historyValue;\n    this.history = config.history;\n    this.actions = config.actions || [];\n    this.activities = config.activities || EMPTY_ACTIVITY_MAP;\n    this.meta = getMeta(config.configuration);\n    this.events = config.events || [];\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration;\n    this.transitions = config.transitions;\n    this.children = config.children;\n    this.done = !!config.done;\n    this.tags = (_a = Array.isArray(config.tags) ? new Set(config.tags) : config.tags) !== null && _a !== void 0 ? _a : new Set();\n    this.machine = config.machine;\n    Object.defineProperty(this, 'nextEvents', {\n      get: function () {\n        return nextEvents(_this.configuration);\n      }\n    });\n  }\n  /**\r\n   * Creates a new State instance for the given `stateValue` and `context`.\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.from = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context: context,\n          _event: stateValue._event,\n          _sessionid: null,\n          historyValue: stateValue.historyValue,\n          history: stateValue.history,\n          actions: [],\n          activities: stateValue.activities,\n          meta: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {}\n        });\n      }\n\n      return stateValue;\n    }\n\n    var _event = initEvent;\n    return new State({\n      value: stateValue,\n      context: context,\n      _event: _event,\n      _sessionid: null,\n      historyValue: undefined,\n      history: undefined,\n      actions: [],\n      activities: undefined,\n      meta: undefined,\n      events: [],\n      configuration: [],\n      transitions: [],\n      children: {}\n    });\n  };\n  /**\r\n   * Creates a new State instance for the given `config`.\r\n   * @param config The state config\r\n   */\n\n\n  State.create = function (config) {\n    return new State(config);\n  };\n  /**\r\n   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.inert = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (!stateValue.actions.length) {\n        return stateValue;\n      }\n\n      var _event = initEvent;\n      return new State({\n        value: stateValue.value,\n        context: context,\n        _event: _event,\n        _sessionid: null,\n        historyValue: stateValue.historyValue,\n        history: stateValue.history,\n        activities: stateValue.activities,\n        configuration: stateValue.configuration,\n        transitions: [],\n        children: {}\n      });\n    }\n\n    return State.from(stateValue, context);\n  };\n  /**\r\n   * Returns an array of all the string leaf state node paths.\r\n   * @param stateValue\r\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\r\n   */\n\n\n  State.prototype.toStrings = function (stateValue, delimiter) {\n    var _this = this;\n\n    if (stateValue === void 0) {\n      stateValue = this.value;\n    }\n\n    if (delimiter === void 0) {\n      delimiter = '.';\n    }\n\n    if (isString(stateValue)) {\n      return [stateValue];\n    }\n\n    var valueKeys = Object.keys(stateValue);\n    return valueKeys.concat.apply(valueKeys, __spreadArray([], __read(valueKeys.map(function (key) {\n      return _this.toStrings(stateValue[key], delimiter).map(function (s) {\n        return key + delimiter + s;\n      });\n    })), false));\n  };\n\n  State.prototype.toJSON = function () {\n    var _a = this;\n        _a.configuration;\n        _a.transitions;\n        var tags = _a.tags;\n        _a.machine;\n        var jsonValues = __rest(_a, [\"configuration\", \"transitions\", \"tags\", \"machine\"]);\n\n    return __assign(__assign({}, jsonValues), {\n      tags: Array.from(tags)\n    });\n  };\n\n  State.prototype.matches = function (parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  };\n  /**\r\n   * Whether the current state configuration has a state node with the specified `tag`.\r\n   * @param tag\r\n   */\n\n\n  State.prototype.hasTag = function (tag) {\n    return this.tags.has(tag);\n  };\n  /**\r\n   * Determines whether sending the `event` will cause a non-forbidden transition\r\n   * to be selected, even if the transitions have no actions nor\r\n   * change the state value.\r\n   *\r\n   * @param event The event to test\r\n   * @returns Whether the event will cause a transition\r\n   */\n\n\n  State.prototype.can = function (event) {\n    var _a;\n\n    if (IS_PRODUCTION) {\n      warn(!!this.machine, \"state.can(...) used outside of a machine-created State object; this will always return false.\");\n    }\n\n    var transitionData = (_a = this.machine) === null || _a === void 0 ? void 0 : _a.getTransitionData(this, event);\n    return !!(transitionData === null || transitionData === void 0 ? void 0 : transitionData.transitions.length) && // Check that at least one transition is not forbidden\n    transitionData.transitions.some(function (t) {\n      return t.target !== undefined || t.actions.length;\n    });\n  };\n\n  return State;\n}();\n\nexport { State, bindActionToState, isState, isStateConfig, stateValuesEqual };\n","import { __assign } from './_virtual/_tslib.js';\n\nvar defaultOptions = {\n  deferEvents: false\n};\n\nvar Scheduler =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n\n      this.process(callback);\n    }\n\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n\n    this.process(task);\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n\n  return Scheduler;\n}();\n\nexport { Scheduler };\n","/**\r\n * Maintains a stack of the current service in scope.\r\n * This is used to provide the correct service to spawn().\r\n */\nvar serviceStack = [];\nvar provide = function (service, fn) {\n  serviceStack.push(service);\n  var result = fn(service);\n  serviceStack.pop();\n  return result;\n};\nvar consume = function (fn) {\n  return fn(serviceStack[serviceStack.length - 1]);\n};\n\nexport { consume, provide };\n","import { __assign } from './_virtual/_tslib.js';\nimport { symbolObservable, toInvokeSource, mapContext, isMachine } from './utils.js';\nimport { provide } from './serviceScope.js';\n\nfunction createNullActor(id) {\n  var _a;\n\n  return _a = {\n    id: id,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    },\n    getSnapshot: function () {\n      return undefined;\n    },\n    toJSON: function () {\n      return {\n        id: id\n      };\n    }\n  }, _a[symbolObservable] = function () {\n    return this;\n  }, _a;\n}\n/**\r\n * Creates a deferred actor that is able to be invoked given the provided\r\n * invocation information in its `.meta` value.\r\n *\r\n * @param invokeDefinition The meta information needed to invoke the actor.\r\n */\n\nfunction createInvocableActor(invokeDefinition, machine, context, _event) {\n  var _a;\n\n  var invokeSrc = toInvokeSource(invokeDefinition.src);\n  var serviceCreator = (_a = machine === null || machine === void 0 ? void 0 : machine.options.services) === null || _a === void 0 ? void 0 : _a[invokeSrc.type];\n  var resolvedData = invokeDefinition.data ? mapContext(invokeDefinition.data, context, _event) : undefined;\n  var tempActor = serviceCreator ? createDeferredActor(serviceCreator, invokeDefinition.id, resolvedData) : createNullActor(invokeDefinition.id); // @ts-ignore\n\n  tempActor.meta = invokeDefinition;\n  return tempActor;\n}\nfunction createDeferredActor(entity, id, data) {\n  var tempActor = createNullActor(id); // @ts-ignore\n\n  tempActor.deferred = true;\n\n  if (isMachine(entity)) {\n    // \"mute\" the existing service scope so potential spawned actors within the `.initialState` stay deferred here\n    var initialState_1 = tempActor.state = provide(undefined, function () {\n      return (data ? entity.withContext(data) : entity).initialState;\n    });\n\n    tempActor.getSnapshot = function () {\n      return initialState_1;\n    };\n  }\n\n  return tempActor;\n}\nfunction isActor(item) {\n  try {\n    return typeof item.send === 'function';\n  } catch (e) {\n    return false;\n  }\n}\nfunction isSpawnedActor(item) {\n  return isActor(item) && 'id' in item;\n} // TODO: refactor the return type, this could be written in a better way but it's best to avoid unneccessary breaking changes now\n\nfunction toActorRef(actorRefLike) {\n  var _a;\n\n  return __assign((_a = {\n    subscribe: function () {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    },\n    id: 'anonymous',\n    getSnapshot: function () {\n      return undefined;\n    }\n  }, _a[symbolObservable] = function () {\n    return this;\n  }, _a), actorRefLike);\n}\n\nexport { createDeferredActor, createInvocableActor, createNullActor, isActor, isSpawnedActor, toActorRef };\n","var children = /*#__PURE__*/new Map();\nvar sessionIdIndex = 0;\nvar registry = {\n  bookId: function () {\n    return \"x:\".concat(sessionIdIndex++);\n  },\n  register: function (id, actor) {\n    children.set(id, actor);\n    return id;\n  },\n  get: function (id) {\n    return children.get(id);\n  },\n  free: function (id) {\n    children.delete(id);\n  }\n};\n\nexport { registry };\n","import { IS_PRODUCTION } from './environment.js';\n\nfunction getGlobal() {\n  if (typeof globalThis !== 'undefined') {\n    return globalThis;\n  }\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  if (!IS_PRODUCTION) {\n    console.warn('XState could not find a global object in this environment. Please let the maintainers know and raise an issue here: https://github.com/statelyai/xstate/issues');\n  }\n}\n\nfunction getDevTools() {\n  var global = getGlobal();\n\n  if (global && '__xstate__' in global) {\n    return global.__xstate__;\n  }\n\n  return undefined;\n}\n\nfunction registerService(service) {\n  if (!getGlobal()) {\n    return;\n  }\n\n  var devTools = getDevTools();\n\n  if (devTools) {\n    devTools.register(service);\n  }\n}\n\nexport { getGlobal, registerService };\n","import { error, doneInvoke } from './actions.js';\nimport { toActorRef } from './Actor.js';\nimport { toObserver } from './utils.js';\n\n/**\r\n * Returns an actor behavior from a reducer and its initial state.\r\n *\r\n * @param transition The pure reducer that returns the next state given the current state and event.\r\n * @param initialState The initial state of the reducer.\r\n * @returns An actor behavior\r\n */\n\nfunction fromReducer(transition, initialState) {\n  return {\n    transition: transition,\n    initialState: initialState\n  };\n}\nfunction fromPromise(promiseFn) {\n  var initialState = {\n    error: undefined,\n    data: undefined,\n    status: 'pending'\n  };\n  return {\n    transition: function (state, event, _a) {\n      var parent = _a.parent,\n          id = _a.id,\n          observers = _a.observers;\n\n      switch (event.type) {\n        case 'fulfill':\n          parent === null || parent === void 0 ? void 0 : parent.send(doneInvoke(id, event.data));\n          return {\n            error: undefined,\n            data: event.data,\n            status: 'fulfilled'\n          };\n\n        case 'reject':\n          parent === null || parent === void 0 ? void 0 : parent.send(error(id, event.error));\n          observers.forEach(function (observer) {\n            observer.error(event.error);\n          });\n          return {\n            error: event.error,\n            data: undefined,\n            status: 'rejected'\n          };\n\n        default:\n          return state;\n      }\n    },\n    initialState: initialState,\n    start: function (_a) {\n      var self = _a.self;\n      promiseFn().then(function (data) {\n        self.send({\n          type: 'fulfill',\n          data: data\n        });\n      }, function (reason) {\n        self.send({\n          type: 'reject',\n          error: reason\n        });\n      });\n      return initialState;\n    }\n  };\n}\nfunction spawnBehavior(behavior, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var state = behavior.initialState;\n  var observers = new Set();\n  var mailbox = [];\n  var flushing = false;\n\n  var flush = function () {\n    if (flushing) {\n      return;\n    }\n\n    flushing = true;\n\n    while (mailbox.length > 0) {\n      var event_1 = mailbox.shift();\n      state = behavior.transition(state, event_1, actorCtx);\n      observers.forEach(function (observer) {\n        return observer.next(state);\n      });\n    }\n\n    flushing = false;\n  };\n\n  var actor = toActorRef({\n    id: options.id,\n    send: function (event) {\n      mailbox.push(event);\n      flush();\n    },\n    getSnapshot: function () {\n      return state;\n    },\n    subscribe: function (next, handleError, complete) {\n      var observer = toObserver(next, handleError, complete);\n      observers.add(observer);\n      observer.next(state);\n      return {\n        unsubscribe: function () {\n          observers.delete(observer);\n        }\n      };\n    }\n  });\n  var actorCtx = {\n    parent: options.parent,\n    self: actor,\n    id: options.id || 'anonymous',\n    observers: observers\n  };\n  state = behavior.start ? behavior.start(actorCtx) : state;\n  return actor;\n}\n\nexport { fromPromise, fromReducer, spawnBehavior };\n","import { __values, __spreadArray, __read, __assign } from './_virtual/_tslib.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { isStateConfig, State, bindActionToState } from './State.js';\nimport { raise, send, errorPlatform, update, error as error$1, log, stop, start, cancel } from './actionTypes.js';\nimport { initEvent, doneInvoke, toActionObjects, resolveActions, error, getActionFunction } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, toObserver, isFunction, toSCXMLEvent, flatten, isPromiseLike, isObservable, isMachine, isBehavior, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, isActor, toInvokeSource, uniqueId } from './utils.js';\nimport { Scheduler } from './scheduler.js';\nimport { createDeferredActor, isSpawnedActor } from './Actor.js';\nimport { registry } from './registry.js';\nimport { getGlobal, registerService } from './devTools.js';\nimport { provide, consume } from './serviceScope.js';\nimport { spawnBehavior } from './behaviors.js';\n\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    var _this = this;\n\n    this.machine = machine;\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this.status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    this._outgoingQueue = [];\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this.status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\".concat(_event.name, \"\\\" was sent to stopped service \\\"\").concat(_this.machine.id, \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \").concat(JSON.stringify(_event.data)));\n        }\n\n        return _this.state;\n      }\n\n      if (_this.status !== InterpreterStatus.Running && !_this.options.deferEvents) {\n        throw new Error(\"Event \\\"\".concat(_event.name, \"\\\" was sent to uninitialized service \\\"\").concat(_this.machine.id // tslint:disable-next-line:max-line-length\n        , \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \").concat(JSON.stringify(_event.data)));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this._nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to, immediate) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isString(to) ? _this.children.get(to) || registry.get(to) : isActor(to) ? to : undefined;\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\".concat(to, \"' from service '\").concat(_this.id, \"'.\"));\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\".concat(_this.id, \"' has no parent: unable to send event \").concat(event.type));\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // perhaps those events should be rejected in the parent\n        // but atm it doesn't have easy access to all of the information that is required to do it reliably\n        if (_this.status !== InterpreterStatus.Stopped || _this.parent !== target || // we need to send events to the parent from exit handlers of a machine that reached its final state\n        _this.state.done) {\n          // Send SCXML events to machines\n          var scxmlEvent = __assign(__assign({}, event), {\n            name: event.name === error$1 ? \"\".concat(error(_this.id)) : event.name,\n            origin: _this.sessionId\n          });\n\n          if (!immediate && _this.machine.config.predictableActionArguments) {\n            _this._outgoingQueue.push([target, scxmlEvent]);\n          } else {\n            target.send(scxmlEvent);\n          }\n        }\n      } else {\n        // Send normal events to other targets\n        if (!immediate && _this.machine.config.predictableActionArguments) {\n          _this._outgoingQueue.push([target, event.data]);\n        } else {\n          target.send(event.data);\n        }\n      }\n    };\n\n    this._exec = function (action, context, _event, actionFunctionMap) {\n      if (actionFunctionMap === void 0) {\n        actionFunctionMap = _this.machine.options.actions;\n      }\n\n      var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n      var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n      if (exec) {\n        try {\n          return exec(context, _event.data, !_this.machine.config.predictableActionArguments ? {\n            action: action,\n            state: _this.state,\n            _event: _event\n          } : {\n            action: action,\n            _event: _event\n          });\n        } catch (err) {\n          if (_this.parent) {\n            _this.parent.send({\n              type: 'xstate.error',\n              data: err\n            });\n          }\n\n          throw err;\n        }\n      }\n\n      switch (action.type) {\n        case send:\n          var sendAction = action;\n\n          if (typeof sendAction.delay === 'number') {\n            _this.defer(sendAction);\n\n            return;\n          } else {\n            if (sendAction.to) {\n              _this.sendTo(sendAction._event, sendAction.to, _event === initEvent);\n            } else {\n              _this.send(sendAction._event);\n            }\n          }\n\n          break;\n\n        case cancel:\n          _this.cancel(action.sendId);\n\n          break;\n\n        case start:\n          {\n            if (_this.status !== InterpreterStatus.Running) {\n              return;\n            }\n\n            var activity = action.activity; // If the activity will be stopped right after it's started\n            // (such as in transient states)\n            // don't bother starting the activity.\n\n            if ( // in v4 with `predictableActionArguments` invokes are called eagerly when the `this.state` still points to the previous state\n            !_this.machine.config.predictableActionArguments && !_this.state.activities[activity.id || activity.type]) {\n              break;\n            } // Invoked services\n\n\n            if (activity.type === ActionTypes.Invoke) {\n              var invokeSource = toInvokeSource(activity.src);\n              var serviceCreator = _this.machine.options.services ? _this.machine.options.services[invokeSource.type] : undefined;\n              var id = activity.id,\n                  data = activity.data;\n\n              if (!IS_PRODUCTION) {\n                warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n                \"`forward` property is deprecated (found in invocation of '\".concat(activity.src, \"' in in machine '\").concat(_this.machine.id, \"'). \") + \"Please use `autoForward` instead.\");\n              }\n\n              var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n              if (!serviceCreator) {\n                // tslint:disable-next-line:no-console\n                if (!IS_PRODUCTION) {\n                  warn(false, \"No service found for invocation '\".concat(activity.src, \"' in machine '\").concat(_this.machine.id, \"'.\"));\n                }\n\n                return;\n              }\n\n              var resolvedData = data ? mapContext(data, context, _event) : undefined;\n\n              if (typeof serviceCreator === 'string') {\n                // TODO: warn\n                return;\n              }\n\n              var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n                data: resolvedData,\n                src: invokeSource,\n                meta: activity.meta\n              }) : serviceCreator;\n\n              if (!source) {\n                // TODO: warn?\n                return;\n              }\n\n              var options = void 0;\n\n              if (isMachine(source)) {\n                source = resolvedData ? source.withContext(resolvedData) : source;\n                options = {\n                  autoForward: autoForward\n                };\n              }\n\n              _this.spawn(source, id, options);\n            } else {\n              _this.spawnActivity(activity);\n            }\n\n            break;\n          }\n\n        case stop:\n          {\n            _this.stopChild(action.activity.id);\n\n            break;\n          }\n\n        case log:\n          var label = action.label,\n              value = action.value;\n\n          if (label) {\n            _this.logger(label, value);\n          } else {\n            _this.logger(value);\n          }\n\n          break;\n\n        default:\n          if (!IS_PRODUCTION) {\n            warn(false, \"No implementation found for action type '\".concat(action.type, \"'\"));\n          }\n\n          break;\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return provide(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    /**\r\n     * @deprecated Use `.getSnapshot()` instead.\r\n     */\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this.status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\".concat(this.id, \"'. Make sure the service is started first.\"));\n      }\n\n      return this._state;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if ((!this.machine.config.predictableActionArguments || // this is currently required to execute initial actions as the `initialState` gets cached\n    // we can't just recompute it (and execute actions while doing so) because we try to preserve identity of actors created within initial assigns\n    _event === initEvent) && this.options.execute) {\n      this.execute(this.state);\n    } else {\n      var item = void 0;\n\n      while (item = this._outgoingQueue.shift()) {\n        item[0].send(item[1]);\n      }\n    } // Update children\n\n\n    this.children.forEach(function (child) {\n      _this.state.children[child.id] = child;\n    }); // Dev tools\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (this.state.done) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this._stop();\n\n      this._stopChildren();\n\n      registry.free(this.sessionId);\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this.status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, _, // TODO: error listener\n  completeListener) {\n    var _this = this;\n\n    var observer = toObserver(nextListenerOrObserver, _, completeListener);\n    this.listeners.add(observer.next); // Send current state to listener\n\n    if (this.status !== InterpreterStatus.NotStarted) {\n      observer.next(this.state);\n    }\n\n    var completeOnce = function () {\n      _this.doneListeners.delete(completeOnce);\n\n      _this.stopListeners.delete(completeOnce);\n\n      observer.complete();\n    };\n\n    if (this.status === InterpreterStatus.Stopped) {\n      observer.complete();\n    } else {\n      this.onDone(completeOnce);\n      this.onStop(completeOnce);\n    }\n\n    return {\n      unsubscribe: function () {\n        _this.listeners.delete(observer.next);\n\n        _this.doneListeners.delete(completeOnce);\n\n        _this.stopListeners.delete(completeOnce);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    } // yes, it's a hack but we need the related cache to be populated for some things to work (like delayed transitions)\n    // this is usually called by `machine.getInitialState` but if we rehydrate from a state we might bypass this call\n    // we also don't want to call this method here as it resolves the full initial state which might involve calling assign actions\n    // and that could potentially lead to some unwanted side-effects (even such as creating some rogue actors)\n\n\n    this.machine._init();\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this.status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : provide(this, function () {\n      return isStateConfig(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n\n  Interpreter.prototype._stopChildren = function () {\n    // TODO: think about converting those to actions\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n    this.children.clear();\n  };\n\n  Interpreter.prototype._stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    if (!this.initialized) {\n      // Interpreter already stopped; do nothing\n      return this;\n    }\n\n    this.initialized = false;\n    this.status = InterpreterStatus.Stopped;\n    this._initialState = undefined;\n\n    try {\n      // we are going to stop within the current sync frame\n      // so we can safely just cancel this here as nothing async should be fired anyway\n      for (var _p = __values(Object.keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    } // clear everything that might be enqueued\n\n\n    this.scheduler.clear();\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    // TODO: add warning for stopping non-root interpreters\n    var _this = this; // grab the current scheduler as it will be replaced in _stop\n\n\n    var scheduler = this.scheduler;\n\n    this._stop(); // let what is currently processed to be finished\n\n\n    scheduler.schedule(function () {\n      // it feels weird to handle this here but we need to handle this even slightly \"out of band\"\n      var _event = toSCXMLEvent({\n        type: 'xstate.stop'\n      });\n\n      var nextState = provide(_this, function () {\n        var exitActions = flatten(__spreadArray([], __read(_this.state.configuration), false).sort(function (a, b) {\n          return b.order - a.order;\n        }).map(function (stateNode) {\n          return toActionObjects(stateNode.onExit, _this.machine.options.actions);\n        }));\n\n        var _a = __read(resolveActions(_this.machine, _this.state, _this.state.context, _event, [{\n          type: 'exit',\n          actions: exitActions\n        }], _this.machine.config.predictableActionArguments ? _this._exec : undefined, _this.machine.config.predictableActionArguments || _this.machine.config.preserveActionOrder), 2),\n            resolvedActions = _a[0],\n            updatedContext = _a[1];\n\n        var newState = new State({\n          value: _this.state.value,\n          context: updatedContext,\n          _event: _event,\n          _sessionid: _this.sessionId,\n          historyValue: undefined,\n          history: _this.state,\n          actions: resolvedActions.filter(function (action) {\n            return action.type !== raise && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n          }),\n          activities: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {},\n          done: _this.state.done,\n          tags: _this.state.tags,\n          machine: _this.machine\n        });\n        newState.changed = true;\n        return newState;\n      });\n\n      _this.update(nextState, _event);\n\n      _this._stopChildren();\n\n      registry.free(_this.sessionId);\n    });\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this.status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \").concat(JSON.stringify(event)));\n      }\n    } else if (this.status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      \"\".concat(events.length, \" event(s) were sent to uninitialized service \\\"\").concat(this.machine.id, \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\"));\n    }\n\n    if (!events.length) {\n      return;\n    }\n\n    var exec = !!this.machine.config.predictableActionArguments && this._exec;\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = provide(_this, function () {\n          return _this.machine.transition(nextState, _event, undefined, exec || undefined);\n        });\n        batchedActions.push.apply(batchedActions, __spreadArray([], __read(_this.machine.config.predictableActionArguments ? nextState.actions : nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })), false));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n\n  Interpreter.prototype._nextState = function (event, exec) {\n    var _this = this;\n\n    if (exec === void 0) {\n      exec = !!this.machine.config.predictableActionArguments && this._exec;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = provide(this, function () {\n      return _this.machine.transition(_this.state, _event, undefined, exec || undefined);\n    });\n    return nextState;\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    return this._nextState(event, false);\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\".concat(event, \"' from interpreter '\").concat(this.id, \"' to nonexistant child '\").concat(id, \"'.\"));\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to, true);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    this._exec(action, state.context, state._event, actionFunctionMap);\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    var _a;\n\n    this.children.delete(childId);\n    this.forwardTo.delete(childId); // this.state might not exist at the time this is called,\n    // such as when a child is added then removed while initializing the state\n\n    (_a = this.state) === null || _a === void 0 ? true : delete _a.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (this.status !== InterpreterStatus.Running) {\n      return createDeferredActor(entity, name);\n    }\n\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isSpawnedActor(entity)) {\n      return this.spawnActor(entity, name);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else if (isBehavior(entity)) {\n      return this.spawnBehavior(entity, name);\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\".concat(name, \"\\\" of type \\\"\").concat(typeof entity, \"\\\".\"));\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnBehavior = function (behavior, id) {\n    var actorRef = spawnBehavior(behavior, {\n      id: id,\n      parent: this\n    });\n    this.children.set(id, actorRef);\n    return actorRef;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var resolvedData;\n    promise.then(function (response) {\n      if (!canceled) {\n        resolvedData = response;\n\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var observer = toObserver(next, handleError, complete);\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          observer.error(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return resolvedData;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _a;\n\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n    var emitted;\n\n    var receive = function (e) {\n      emitted = e;\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(toSCXMLEvent(e, {\n        origin: id\n      }));\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = (_a = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        var observer = toObserver(next);\n        listeners.add(observer.next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(observer.next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      },\n      getSnapshot: function () {\n        return emitted;\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _a;\n\n    var _this = this;\n\n    var emitted;\n    var subscription = source.subscribe(function (value) {\n      emitted = value;\n\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      getSnapshot: function () {\n        return emitted;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a);\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor, name) {\n    this.children.set(name, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\".concat(activity.type, \"'\"));\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    var _a;\n\n    this.children.set(id, (_a = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      getSnapshot: function () {\n        return undefined;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    }, _a[symbolObservable] = function () {\n      return this;\n    }, _a));\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    var global = getGlobal();\n\n    if (this.options.devTools && global) {\n      if (global.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = global.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n\n  Interpreter.prototype.getSnapshot = function () {\n    if (this.status === InterpreterStatus.NotStarted) {\n      return this.initialState;\n    }\n\n    return this._state;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = {\n    execute: true,\n    deferEvents: true,\n    clock: {\n      setTimeout: function (fn, ms) {\n        return setTimeout(fn, ms);\n      },\n      clearTimeout: function (id) {\n        return clearTimeout(id);\n      }\n    },\n    logger: /*#__PURE__*/console.log.bind(console),\n    devTools: false\n  };\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return consume(function (service) {\n    if (!IS_PRODUCTION) {\n      var isLazyEntity = isMachine(entity) || isFunction(entity);\n      warn(!!service || isLazyEntity, \"Attempted to spawn an Actor (ID: \\\"\".concat(isMachine(entity) ? entity.id : 'undefined', \"\\\") outside of a service. This will have no effect.\"));\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createDeferredActor(entity, resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, InterpreterStatus, interpret, spawn };\n","import { __assign, __rest } from './_virtual/_tslib.js';\nimport './types.js';\nimport { invoke } from './actionTypes.js';\nimport './utils.js';\nimport './environment.js';\n\nfunction toInvokeSource(src) {\n  if (typeof src === 'string') {\n    var simpleSrc = {\n      type: src\n    };\n\n    simpleSrc.toString = function () {\n      return src;\n    }; // v4 compat - TODO: remove in v5\n\n\n    return simpleSrc;\n  }\n\n  return src;\n}\nfunction toInvokeDefinition(invokeConfig) {\n  return __assign(__assign({\n    type: invoke\n  }, invokeConfig), {\n    toJSON: function () {\n      invokeConfig.onDone;\n          invokeConfig.onError;\n          var invokeDef = __rest(invokeConfig, [\"onDone\", \"onError\"]);\n\n      return __assign(__assign({}, invokeDef), {\n        type: invoke,\n        src: toInvokeSource(invokeConfig.src)\n      });\n    }\n  });\n}\n\nexport { toInvokeDefinition, toInvokeSource };\n","import { __assign, __spreadArray, __read, __values, __rest } from './_virtual/_tslib.js';\nimport { isFunction, mapValues, isArray, flatten, toArray, toStateValue, isString, getEventType, toSCXMLEvent, matchesState, path, evaluateGuard, mapContext, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, createInvokeId } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { raise as raise$1, send, start as start$1, stop as stop$1, invoke, update, nullEvent } from './actionTypes.js';\nimport { done, start, toActionObjects, raise, stop, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send as send$1, cancel, initEvent } from './actions.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, getTagsFromConfiguration, has, getChildren, getValue, isLeafNode, getAllChildren } from './stateUtils.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\n\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\".concat(event, \"'\");\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \".concat(eventText, \" on state '\").concat(stateNode.id, \"' are unreachable. \") + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  _context, // TODO: this is unsafe, but we're removing it in v5 anyway\n  _stateInfo) {\n    if (_context === void 0) {\n      _context = 'context' in config ? config.context : undefined;\n    }\n\n    var _this = this;\n\n    var _a;\n\n    this.config = config;\n    this._context = _context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = _stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.parent;\n    this.key = this.config.key || (_stateInfo === null || _stateInfo === void 0 ? void 0 : _stateInfo.key) || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path), false).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && Object.keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n    this.description = this.config.description;\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \".concat(this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\".concat(this.type, \"'`\"), \" in the config for state node '\").concat(this.id, \"' instead.\"));\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {}, undefined, {\n        parent: _this,\n        key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getAllChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        var invokeId = createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_a = {}, _a[invokeId] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeId,\n          id: invokeId\n        });\n      } else if (isString(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeId,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeId = invokeConfig.id || createInvokeId(_this.id, i);\n        _this.machine.options.services = __assign((_b = {}, _b[invokeId] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeId\n        }, invokeConfig), {\n          src: invokeId\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: createInvokeId(_this.id, i)\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context !== null && context !== void 0 ? context : this.context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"context\", {\n    get: function () {\n      return isFunction(this._context) ? this._context() : this._context;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke,\n        description: this.description,\n        tags: this.tags\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? \"\".concat(_this.id, \":delay[\").concat(i, \"]\") : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send$1(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(Object.keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = Object.keys(stateValue);\n    var subStateNodes = [this];\n    subStateNodes.push.apply(subStateNodes, __spreadArray([], __read(flatten(subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n    }))), false));\n    return subStateNodes;\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var stateFromConfig = state instanceof State ? state : State.create(state);\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(stateFromConfig.value)));\n    return new State(__assign(__assign({}, stateFromConfig), {\n      value: this.resolve(stateFromConfig.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this),\n      tags: getTagsFromConfiguration(configuration),\n      machine: this.machine\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = Object.keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(Object.keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var configuration = flatten(Object.keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(Object.keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (Object.keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.getTransitionData = function (state, event) {\n    return this._transition(state.value, state, toSCXMLEvent(event));\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\".concat(cond.name || cond.type, \"' in transition for event '\").concat(eventName, \"' in state node '\").concat(this.id, \"':\\n\").concat(err.message));\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions), false));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    return {\n      transitions: [selectedTransition],\n      exitSet: isInternal ? [] : flatten(nextStateNodes.map(function (targetNode) {\n        return _this.getPotentiallyReenteringNodes(targetNode);\n      })),\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  }; // even though the name of this function mentions reentry nodes\n  // we are pushing its result into `exitSet`\n  // that's because what we exit might be reentered (it's an invariant of reentrancy)\n\n\n  StateNode.prototype.getPotentiallyReenteringNodes = function (targetNode) {\n    if (this.order < targetNode.order) {\n      return [this];\n    }\n\n    var nodes = [];\n    var marker = this;\n    var possibleAncestor = targetNode;\n\n    while (marker && marker !== possibleAncestor) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    if (marker !== possibleAncestor) {\n      // we never got to `possibleAncestor`, therefore the initial `marker` \"escapes\" it\n      // it's in a different part of the tree so no states will be reentered for such an external transition\n      return [];\n    }\n\n    nodes.push(possibleAncestor);\n    return nodes;\n  };\n\n  StateNode.prototype.getActions = function (resolvedConfig, isDone, transition, currentContext, _event, prevState, predictableExec) {\n    var e_4, _a, e_5, _b;\n\n    var _this = this;\n\n    var prevConfig = prevState ? getConfiguration([], this.getStateNodes(prevState.value)) : [];\n    var entrySet = new Set();\n\n    try {\n      for (var _c = __values(Array.from(resolvedConfig).sort(function (a, b) {\n        return a.order - b.order;\n      })), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var sn = _d.value;\n\n        if (!has(prevConfig, sn) || has(transition.exitSet, sn) || sn.parent && entrySet.has(sn.parent)) {\n          entrySet.add(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    var entryStates = Array.from(entrySet).sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var exitStates = new Set(transition.exitSet);\n    var doneEvents = flatten(entryStates.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    var entryActions = entryStates.map(function (stateNode) {\n      var entryActions = stateNode.onEntry;\n      var invokeActions = stateNode.activities.map(function (activity) {\n        return start(activity);\n      });\n      return {\n        type: 'entry',\n        actions: toActionObjects(predictableExec ? __spreadArray(__spreadArray([], __read(entryActions), false), __read(invokeActions), false) : __spreadArray(__spreadArray([], __read(invokeActions), false), __read(entryActions), false), _this.machine.options.actions)\n      };\n    }).concat({\n      type: 'state_done',\n      actions: doneEvents.map(raise)\n    });\n    var exitActions = Array.from(exitStates).map(function (stateNode) {\n      return {\n        type: 'exit',\n        actions: toActionObjects(__spreadArray(__spreadArray([], __read(stateNode.onExit), false), __read(stateNode.activities.map(function (activity) {\n          return stop(activity);\n        })), false), _this.machine.options.actions)\n      };\n    });\n    var actions = exitActions.concat({\n      type: 'transition',\n      actions: toActionObjects(transition.actions, this.machine.options.actions)\n    }).concat(entryActions);\n\n    if (isDone) {\n      var stopActions = toActionObjects(flatten(__spreadArray([], __read(resolvedConfig), false).sort(function (a, b) {\n        return b.order - a.order;\n      }).map(function (stateNode) {\n        return stateNode.onExit;\n      })), this.machine.options.actions).filter(function (action) {\n        return action.type !== raise$1 && (action.type !== send || !!action.to && action.to !== SpecialTargets.Internal);\n      });\n      return actions.concat({\n        type: 'stop',\n        actions: stopActions\n      });\n    }\n\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context, exec) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context !== null && context !== void 0 ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\".concat(WILDCARD, \"')\"));\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\".concat(this.id, \"' does not accept event '\").concat(_event.name, \"'\"));\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig), false);\n    return this.resolveTransition(stateTransition, currentState, currentState.context, exec, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent, predictableExec) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event, undefined, predictableExec); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions), false));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, context, predictableExec, _event) {\n    var e_6, _a, e_7, _b;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedConfiguration = willTransition ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var actionBlocks = this.getActions(new Set(resolvedConfiguration), isDone, stateTransition, context, _event, currentState, predictableExec);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actionBlocks_1 = __values(actionBlocks), actionBlocks_1_1 = actionBlocks_1.next(); !actionBlocks_1_1.done; actionBlocks_1_1 = actionBlocks_1.next()) {\n        var block = actionBlocks_1_1.value;\n\n        try {\n          for (var _c = (e_7 = void 0, __values(block.actions)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var action = _d.value;\n\n            if (action.type === start$1) {\n              activities[action.activity.id || action.activity.type] = action;\n            } else if (action.type === stop$1) {\n              activities[action.activity.id || action.activity.type] = false;\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actionBlocks_1_1 && !actionBlocks_1_1.done && (_a = actionBlocks_1.return)) _a.call(actionBlocks_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _e = __read(resolveActions(this, currentState, context, _event, actionBlocks, predictableExec, this.machine.config.predictableActionArguments || this.machine.config.preserveActionOrder), 2),\n        resolvedActions = _e[0],\n        updatedContext = _e[1];\n\n    var _f = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _f[0],\n        nonRaisedActions = _f[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: getTagsFromConfiguration(resolvedConfiguration),\n      machine: this\n    });\n    var didUpdateContext = context !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    } // There are transient transitions if the machine is not in a final state\n    // and if some of the state nodes have transient (\"always\") transitions.\n\n\n    var hasAlwaysTransitions = !isDone && (this._transient || configuration.some(function (stateNode) {\n      return stateNode._transient;\n    })); // If there are no enabled transitions, check if there are transient transitions.\n    // If there are transient transitions, continue checking for more transitions\n    // because an transient transition should be triggered even if there are no\n    // enabled transitions.\n    //\n    // If we're already working on an transient transition then stop to prevent an infinite loop.\n    //\n    // Otherwise, if there are no enabled nor transient transitions, we are done.\n\n    if (!willTransition && (!hasAlwaysTransitions || _event.name === NULL_EVENT)) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      if (hasAlwaysTransitions) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event, predictableExec);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event, predictableExec);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\".concat(stateKey, \"' from '\").concat(this.id, \"'; no child states exist.\"));\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\".concat(resolvedStateId, \"' does not exist on machine '\").concat(this.id, \"'\"));\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!Object.keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\".concat(stateIdentifier, \"'\"));\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\".concat(this.initial, \"' not found on '\").concat(this.key, \"'\"));\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, context !== null && context !== void 0 ? context : this.machine.context, undefined);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\".concat(this.id, \"'.\"));\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\".concat(this.id, \"' has no initial state.\"));\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\".concat(stateKey, \"' from node with no states\"));\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\".concat(stateKey, \"' does not exist on '\").concat(this.id, \"'\"));\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!Object.keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(Object.keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_8, _a, e_9, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(Object.keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_9 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\".concat(event_1));\n                }\n              } catch (e_9_1) {\n                e_9 = {\n                  error: e_9_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_9) throw e_9.error;\n                }\n              }\n            }\n          }\n        } catch (e_8_1) {\n          e_8 = {\n            error: e_8_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_8) throw e_8.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\".concat(_this.id, \"':\\n\").concat(err.message));\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\".concat(t.id);\n          }) : undefined,\n          source: \"#\".concat(_this.id)\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_10, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(Object.keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + \"Please check the `on` configuration for \\\"#\".concat(_this.id, \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\".concat(this.id, \"\\\".\"));\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)), false));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)), false));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig), false), __read(invokeConfig), false), __read(onConfig), false), __read(eventlessConfig), false).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };\n","import { assign as assign$1, send as send$1, sendTo as sendTo$1, sendParent as sendParent$1, sendUpdate as sendUpdate$1, forwardTo as forwardTo$1, doneInvoke as doneInvoke$1, raise as raise$1 } from './actions.js';\nimport * as actions from './actions.js';\nexport { actions };\nexport { toActorRef } from './Actor.js';\nexport { Interpreter, InterpreterStatus, interpret, spawn } from './interpreter.js';\nexport { Machine, createMachine } from './Machine.js';\nexport { mapState } from './mapState.js';\nexport { matchState } from './match.js';\nexport { createSchema, t } from './schema.js';\nexport { State } from './State.js';\nexport { StateNode } from './StateNode.js';\nexport { spawnBehavior } from './behaviors.js';\nexport { ActionTypes, SpecialTargets } from './types.js';\nexport { matchesState, toEventObject, toObserver, toSCXMLEvent } from './utils.js';\n\nvar assign = assign$1,\n    send = send$1,\n    sendTo = sendTo$1,\n    sendParent = sendParent$1,\n    sendUpdate = sendUpdate$1,\n    forwardTo = forwardTo$1,\n    doneInvoke = doneInvoke$1,\n    raise = raise$1;\n\nexport { assign, doneInvoke, forwardTo, raise, send, sendParent, sendTo, sendUpdate };\n","import { Button } from \"./button\";\nimport { Decimal } from \"decimal.js\";\nimport { assign, createMachine } from \"xstate\";\n\nfunction calculate(firstOperand, secondOperand, operator) {\n  let result;\n  switch (operator) {\n    case Button.DIVIDE:\n      // Return an error when dividing by zero\n      result =\n        secondOperand == 0\n          ? \"DIV/0 ERROR\"\n          : firstOperand.dividedBy(secondOperand).toString();\n      break;\n    case Button.MULTIPLY:\n      result = firstOperand.times(secondOperand).toString();\n      break;\n    case Button.SUBTRACT:\n      result = firstOperand.minus(secondOperand).toString();\n      break;\n    case Button.ADD:\n      result = firstOperand.plus(secondOperand).toString();\n      break;\n    default:\n      result = \"OPERATOR ERROR\";\n  }\n  // Return an error when the result is too large or small\n  if (result.indexOf(\"e+\") >= 0) {\n    result = result.charAt(0) == \"-\" ? \"MIN ERROR\" : \"MAX ERROR\";\n  }\n  // Return an error when the result contains too many decimals\n  if (result.indexOf(\"e-\") >= 0) {\n    result = \"DECIMAL ERROR\";\n  }\n  return result;\n}\n\nconst noError = (context) => context.display.indexOf(\"ERROR\") < 0;\n\n/*\n * A state machine representing the calculator.\n *\n * Available states:\n *  1. editFirstOperand\n *  2. editOperator\n *  3. editSecondOperand\n *  4. showResults\n *\n * Available events:\n *  - NUMBER\n *  - OPERATOR\n *  - CLEAR\n *  - DELETE\n *  - DECIMAL\n *  - EQUALS\n */\nexport const CalculatorMachine = createMachine(\n  {\n    predictableActionArguments: true,\n    id: \"calculatorMachine\",\n    initial: \"editFirstOperand\",\n    context: {\n      firstOperand: undefined,\n      secondOperand: undefined,\n      selectedOperator: undefined,\n      display: \"0\",\n    },\n    states: {\n      // State 1: Edit first operand ///////////////////////////////////////////\n\n      editFirstOperand: {\n        on: {\n          NUMBER: {\n            actions: [\"appendToDisplay\"],\n          },\n          DECIMAL: {\n            actions: [\"appendDecimalPoint\"],\n          },\n          OPERATOR: {\n            target: \"editOperator\",\n            actions: [\"saveFirstOperand\", \"saveOperator\"],\n          },\n          DELETE: {\n            actions: [\"removeFromDisplay\"],\n          },\n          CLEAR: {\n            actions: [\"resetAll\"],\n          },\n        },\n      },\n\n      // State 2: Edit operator ////////////////////////////////////////////////\n\n      editOperator: {\n        on: {\n          NUMBER: {\n            target: \"editSecondOperand\",\n            actions: [\"resetDisplay\", \"appendToDisplay\"],\n          },\n          OPERATOR: {\n            actions: [\"saveOperator\"],\n          },\n          DELETE: {\n            target: \"editFirstOperand\",\n            actions: [\"resetFirstOperand\", \"resetOperator\"],\n          },\n          EQUALS: {\n            target: \"showResults\",\n            actions: [\"saveSecondOperand\", \"execute\"],\n          },\n          CLEAR: {\n            target: \"editFirstOperand\",\n            actions: [\"resetAll\"],\n          },\n        },\n      },\n\n      // State 3: Edit second operand //////////////////////////////////////////\n\n      editSecondOperand: {\n        on: {\n          NUMBER: {\n            actions: [\"appendToDisplay\"],\n          },\n          DECIMAL: {\n            actions: [\"appendDecimalPoint\"],\n          },\n          OPERATOR: {\n            target: \"editOperator\",\n            actions: [\n              \"saveSecondOperand\",\n              \"execute\",\n              \"saveFirstOperand\",\n              \"saveOperator\",\n              \"resetSecondOperand\",\n            ],\n          },\n          DELETE: {\n            actions: [\"removeFromDisplay\"],\n          },\n          EQUALS: {\n            target: \"showResults\",\n            actions: [\"saveSecondOperand\", \"execute\"],\n          },\n          CLEAR: {\n            target: \"editFirstOperand\",\n            actions: [\"resetAll\"],\n          },\n        },\n      },\n\n      // State 4: Show results /////////////////////////////////////////////////\n\n      showResults: {\n        entry: [\"verifyResults\"],\n        on: {\n          NUMBER: {\n            target: \"editFirstOperand\",\n            actions: [\"resetAll\", \"appendToDisplay\"],\n          },\n          OPERATOR: {\n            cond: \"noError\",\n            target: \"editOperator\",\n            actions: [\"resetSecondOperand\", \"saveFirstOperand\", \"saveOperator\"],\n          },\n          EQUALS: {\n            cond: \"noError\",\n            target: \"showResults\",\n            actions: [\"saveFirstOperand\", \"execute\"],\n          },\n          CLEAR: {\n            target: \"editFirstOperand\",\n            actions: [\"resetAll\"],\n          },\n        },\n      },\n    },\n  },\n  {\n    guards: { noError },\n    actions: {\n      // Display actions ///////////////////////////////////////////////////////\n\n      appendToDisplay: assign({\n        display: (context, event) => {\n          if (context.display === \"0\") {\n            return event.value;\n          }\n          if (context.display.length >= 15) {\n            return context.display;\n          }\n          return context.display + event.value;\n        },\n      }),\n      removeFromDisplay: assign({\n        display: (context) =>\n          context.display.length <= 1 ? \"0\" : context.display.slice(0, -1),\n      }),\n      appendDecimalPoint: assign({\n        display: (context) =>\n          context.display.indexOf(\".\") < 0\n            ? context.display + \".\"\n            : context.display,\n      }),\n\n      // Save actions //////////////////////////////////////////////////////////\n\n      saveFirstOperand: assign({\n        firstOperand: (context) => new Decimal(context.display),\n      }),\n      saveSecondOperand: assign({\n        secondOperand: (context) => new Decimal(context.display),\n      }),\n      saveOperator: assign({\n        selectedOperator: (context, event) => event.value,\n      }),\n\n      // Reset actions /////////////////////////////////////////////////////////\n\n      resetAll: assign({\n        firstOperand: () => undefined,\n        secondOperand: () => undefined,\n        selectedOperator: () => undefined,\n        display: () => \"0\",\n      }),\n      resetFirstOperand: assign({\n        firstOperand: () => undefined,\n      }),\n      resetSecondOperand: assign({\n        secondOperand: () => undefined,\n      }),\n      resetOperator: assign({\n        selectedOperator: () => undefined,\n      }),\n      resetDisplay: assign({\n        display: () => \"0\",\n      }),\n\n      // Execute actions ///////////////////////////////////////////////////////\n\n      execute: assign({\n        display: (context) => {\n          return calculate(\n            context.firstOperand,\n            context.secondOperand,\n            context.selectedOperator\n          );\n        },\n      }),\n      verifyResults: assign({\n        firstOperand: (context) =>\n          noError(context) ? context.firstOperand : undefined,\n        secondOperand: (context) =>\n          noError(context) ? context.secondOperand : undefined,\n        selectedOperator: (context) =>\n          noError(context) ? context.selectedOperator : undefined,\n      }),\n    },\n  }\n);\n","import { StateNode } from './StateNode.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nvar warned = false;\nfunction Machine(config, options, initialContext) {\n  if (initialContext === void 0) {\n    initialContext = config.context;\n  }\n\n  return new StateNode(config, options, initialContext);\n}\nfunction createMachine(config, options) {\n  if (!IS_PRODUCTION && !('predictableActionArguments' in config) && !warned) {\n    warned = true;\n    console.warn('It is highly recommended to set `predictableActionArguments` to `true` when using `createMachine`. https://xstate.js.org/docs/guides/actions.html');\n  }\n\n  return new StateNode(config, options);\n}\n\nexport { Machine, createMachine };\n","import { CalculatorMachine } from \"./calculatorState\";\nimport { Button } from \"./button\";\nimport { Decimal } from \"decimal.js\";\nimport { interpret } from \"xstate\";\n\n// HTML element constants\n\nconst operationOutput = document.querySelector(\".operation\");\nconst output = document.querySelector(\".result\");\n\n// The calculator state machine\n\nconst calculatorService = interpret(CalculatorMachine).onTransition((state) => {\n  let context = state.context;\n\n  console.log(\n    `State:       ${state.value} \\n` +\n      `1st Operand: ${context.firstOperand} \\n` +\n      `2nd Operand: ${context.secondOperand} \\n` +\n      `Result:      ${context.result} \\n` +\n      `Operator:    ${context.selectedOperator} \\n` +\n      `Display:     ${context.display}`\n  );\n\n  var operationOutputText = \"\";\n  if (context.firstOperand !== undefined) {\n    operationOutputText += context.firstOperand;\n  }\n  if (context.selectedOperator !== undefined) {\n    operationOutputText += ` ${Button.toString(context.selectedOperator)}`;\n  }\n  if (context.secondOperand !== undefined) {\n    operationOutputText += ` ${context.secondOperand}`;\n  }\n\n  operationOutput.innerText = operationOutputText;\n  output.innerText = context.display;\n});\n\n// Input handler\n\nfunction handleButtonInput(buttonValue) {\n  let eventName = convertButtonValueToEventName(buttonValue);\n\n  if (eventName) {\n    calculatorService.send({ type: eventName, value: buttonValue });\n  } else {\n    alert(`Error: button value \"${buttonValue}\" is not valid.`);\n  }\n}\n\nfunction convertButtonValueToEventName(buttonValue) {\n  switch (true) {\n    case Button.isNumber(buttonValue):\n      return \"NUMBER\";\n    case Button.isOperator(buttonValue):\n      return \"OPERATOR\";\n    case Button.EQUALS == buttonValue:\n      return \"EQUALS\";\n    case Button.BACKSPACE == buttonValue:\n      return \"DELETE\";\n    case Button.DECIMAL == buttonValue:\n      return \"DECIMAL\";\n    case Button.CLEAR == buttonValue:\n      return \"CLEAR\";\n    default:\n      return undefined;\n  }\n}\n\n// Init\n\nfunction init() {\n  document.querySelector(\".calc\").addEventListener(\"click\", function (event) {\n    if (event.target.tagName === \"BUTTON\") {\n      handleButtonInput(event.target.value);\n    }\n  });\n  document\n    .querySelector(\"#dark-mode-toggle\")\n    .addEventListener(\"click\", function () {\n      document.querySelector(\"#container\").classList.toggle(\"dark-mode\");\n    });\n  // Set options for Decimal.js\n  Decimal.set({ toExpPos: 15, toExpNeg: -14, precision: 20 });\n  calculatorService.start();\n}\n\ninit();\n"],"names":["$6411b0161a997a91$export$353f5b6fc5456de1","Object","freeze","ADD","SUBTRACT","MULTIPLY","DIVIDE","CLEAR","BACKSPACE","EQUALS","DECIMAL","isOperator","value","this","includes","isNumber","length","isNaN","parseInt","isInput","toString","console","error","globalScope","inexact","noConflict","quadrant","EXP_LIMIT","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","LN10","PI_PRECISION","PI","toStringTag","digitsToString","d","i","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","max","Error","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","strL","arrL","arr","NUMERALS","indexOf","charAt","j","reverse","P","abs","x","constructor","s","finalise","e","clamp","Ctor","NaN","cmp","y","ydL","xd","yd","xs","ys","xdL","cosine","cos","pr","sd","len","isZero","tinyPow","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cbrt","m","n","rep","t","t3","t3plusx","isFinite","toExponential","slice","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","gt","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","sinh","sqrt","sinh2_x","d5","d16","d20","tanh","acos","halfPi","isNeg","getPi","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","asin","atan","inverseTangent","px","x2","isInteger","isInt","lt","lessThanOrEqualTo","log","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","push","pop","shift","getBase10Exponent","mod","q","naturalExponential","exp","add","carry","unshift","z","getPrecision","sin","mul","rL","toDP","MAX_DIGITS","finiteToString","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toStringBinary","yn","intPow","toPrecision","toSD","trunc","toJSON","multiplyInteger","temp","compare","a","b","aL","bL","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","subtract","isTruncated","roundUp","xdi","out","digits","isExp","nonFiniteToString","zs","truncate","args","ltgt","guard","sum","c","c0","numerator","x1","$b74e93109ba456db$export$1385d81a6c6bbcd4","$b74e93109ba456db$export$79f5baa747fbdd45","$d9c803f633d21408$export$18ce0697a983be9b","assign","arguments","p","prototype","hasOwnProperty","call","apply","getOwnPropertySymbols","propertyIsEnumerable","$d9c803f633d21408$export$19a8beecd37a4c45","o","Symbol","iterator","next","done","TypeError","$d9c803f633d21408$export$8d051b38c9118094","ar","$0ba2bc18e91bd780$var$_a","$41059b6f2e1b7a0a$export$b3571188c770cc5a","Start","$41059b6f2e1b7a0a$export$fa6813432f753b0d","Stop","$41059b6f2e1b7a0a$export$66313c302b2ea154","Raise","$41059b6f2e1b7a0a$export$89db4734f6c919c4","Send","$41059b6f2e1b7a0a$export$70b61ad426ddbe54","Cancel","$41059b6f2e1b7a0a$export$9477ceca5dcd796a","NullEvent","$41059b6f2e1b7a0a$export$e6e34fd1f2686227","Assign","$41059b6f2e1b7a0a$export$bef1f36f5486a6a3","After","DoneState","Log","$41059b6f2e1b7a0a$export$2cd8252107eb640b","Init","$41059b6f2e1b7a0a$export$468cda29b159ee5d","Invoke","$41059b6f2e1b7a0a$export$503a23d0e5cd1226","ErrorExecution","ErrorPlatform","$41059b6f2e1b7a0a$export$a3bc9b8ed74fc","ErrorCustom","$41059b6f2e1b7a0a$export$722fbec263ad908a","Update","$41059b6f2e1b7a0a$export$7877a478dd30fd3d","Choose","$41059b6f2e1b7a0a$export$48ec4a2b1cfc6557","Pure","$9700b9c4f37abdbc$export$505a390a702f4a23","$0ba2bc18e91bd780$export$2870710bf0eac88e","parentStateId","childStateId","delimiter","parentStateValue","$0ba2bc18e91bd780$export$fb3aecd1d93744e3","childStateValue","$0ba2bc18e91bd780$export$844ec244b1367d54","keys","every","key","$0ba2bc18e91bd780$export$7193fc8c8cd445e9","event","concat","type","$0ba2bc18e91bd780$export$304cde62ecda7af8","stateId","$0ba2bc18e91bd780$export$43bee75e5e14138e","split","stateValue","state","$0ba2bc18e91bd780$export$f2ee84fc53c45e74","statePath","marker","$0ba2bc18e91bd780$export$825e789796ab7275","collection","iteratee","result","collectionKeys","$0ba2bc18e91bd780$export$2d4204fe9b34204e","predicate","e_1","_a","_b","_c","item","e_1_1","return","$0ba2bc18e91bd780$export$bb654e07daaf8c3a","props","object","e_2","props_1","props_1_1","e_2_1","$0ba2bc18e91bd780$export$bffa455ba8c619a6","map","subStateValue","$0ba2bc18e91bd780$export$a2618e9e89698dd6","subPath","array","$d9c803f633d21408$export$1216008129fb82ed","$0ba2bc18e91bd780$export$2c0b6b2f4faf21e1","$0ba2bc18e91bd780$export$45b10814cc054894","undefined","mapper","context","_event","data","subMapper","$0ba2bc18e91bd780$export$f6e2535fb5126e54","e_5_1","e_5","$0ba2bc18e91bd780$export$ae936b9d47e5870e","Promise","then","hist","states","subHist","current","$0ba2bc18e91bd780$export$3737909a0074eb1","assignActions","reduce","acc","assignAction","e_7","assignment","meta","action","partialUpdate","propAssignment","e_7_1","Array","isArray","$0ba2bc18e91bd780$export$b0f5a08e0ca47933","condition","guardMap","name","$0ba2bc18e91bd780$export$c45ebe72e3b2885","observable","$0ba2bc18e91bd780$export$2163e7903738b5df","$0ba2bc18e91bd780$export$5a4ea50826a01d14","payload","$0ba2bc18e91bd780$export$eaf22249b410f633","scxmlEvent","$$type","eventObject","$0ba2bc18e91bd780$export$3822a36ea084a4d5","configLike","transitionLike","target","$0ba2bc18e91bd780$export$91646ab912d254e8","machine","guards","options","guardMeta","cond","condFn","id","$0ba2bc18e91bd780$export$436e852aa2feda95","src","$0ba2bc18e91bd780$export$75b67481063f2f98","nextHandler","errorHandler","completionHandler","noop","isObserver","self","bind","$ab1fe168d053d080$export$163c566c60ed2ec9","$ab1fe168d053d080$export$c7e5ca927bd4567","actionType","actionFunctionMap","$ab1fe168d053d080$export$b38b66cc2da3ede7","actionObject","exec","$ab1fe168d053d080$export$aa68691f32e6c459","subAction","$ab1fe168d053d080$export$e81fdd8937d44864","$ab1fe168d053d080$export$66313c302b2ea154","$ab1fe168d053d080$export$89db4734f6c919c4","to","Internal","delay","$ab1fe168d053d080$export$3df11c9c20e7b288","$ab1fe168d053d080$export$c105e588793f70b4","DoneInvoke","$ab1fe168d053d080$export$a3bc9b8ed74fc","currentState","currentContext","actionBlocks","predictableExec","preserveActionOrder","actionBlocks_1","actionBlocks_1_1","block","actions","splice","$ab1fe168d053d080$var$pluckAssigns","$0ba2bc18e91bd780$export$d84706064a6e6c1c","handleAction","blockType","sendAction","ctx","delaysMap","resolvedDelay","resolvedEvent","configDelay","resolvedTarget","$ab1fe168d053d080$export$f43e8cbb721d72d5","updatedContext","delays","deferredToBlockEnd","resolved","expr","$ab1fe168d053d080$export$12cba28d36be4946","actorRefOrString","activity","resolvedActorRef","$83ffdf18b0958611$export$335db82b86111fd1","stateNode","$83ffdf18b0958611$export$ad3d2e38d4deaf6d","$83ffdf18b0958611$export$f8cf48ee793b41be","filter","sn","$83ffdf18b0958611$export$3de19bba299e3801","stateNodes","$83ffdf18b0958611$export$3de01744a82b21a4","prevStateNodes","e_3","e_4","_d","prevAdjList","$83ffdf18b0958611$export$b837d8c2d0189d63","Set","configuration","configuration_1","configuration_1_1","parent","has","adjList","configuration_2","configuration_2_1","get","_e","_f","child","forEach","initialStateNodes","e_3_1","configuration_3","configuration_3_1","e_4_1","$83ffdf18b0958611$var$getValueFromAdj","baseNode","childStateNodes","childStateNode","csn","Map","configuration_4","configuration_4_1","set","$83ffdf18b0958611$export$bf7199a9ebcb84a9","rootNode","$83ffdf18b0958611$export$a4f4bb6b1453fff5","iterable","some","member","$83ffdf18b0958611$export$cf3d5dae927fcf63","$83ffdf18b0958611$export$5301196121335ca0","tags","$db5fc64655327378$export$3a6d15eeb5fb214c","aKeys","bKeys","$db5fc64655327378$export$4c86eb6450eda77a","$db5fc64655327378$export$7254cc27399e90bd","config","_this","activities","events","_sessionid","historyValue","history","matches","toStrings","transitions","children","ownEvents","$83ffdf18b0958611$export$c661ab6895e3ed73","from","create","inert","valueKeys","$d4afdeb7da3b7c9c$var$defaultOptions","deferEvents","$d4afdeb7da3b7c9c$export$d3e54bb8584cda7c","processingEvent","queue","initialized","initialize","callback","schedule","process","flushEvents","task","clear","nextCallback","$d5fd06e17ea1d0ca$var$serviceStack","$d5fd06e17ea1d0ca$export$abe1e183e22e10ad","service","fn","$4b4d9290e25c7ae7$export$8998449b468dcdad","send","subscribe","unsubscribe","getSnapshot","$4b4d9290e25c7ae7$export$59bcb51d8e40ed48","entity","deferred","initialState_1","tempActor","withContext","initialState","$9a2b924c76081ce4$var$children","$9a2b924c76081ce4$var$sessionIdIndex","$9a2b924c76081ce4$export$4bb7493d241fd8a5","actor","delete","$4e631aba0bc90519$export$a4e55266d2135a7f","globalThis","window","$parcel$global","$4e631aba0bc90519$export$4d7a7d14704ebc13","devTools","global","__xstate__","$4e631aba0bc90519$var$getDevTools","register","$1a367ba7ff6a0efe$export$cc3859917b3feaf8","behavior","actorRefLike","observers","mailbox","event_1","transition","actorCtx","observer","flush","handleError","complete","$9ab7fd156e8ddce7$export$7a567c9c5088a551","$9ab7fd156e8ddce7$var$DEFAULT_SPAWN_OPTIONS","sync","autoForward","$9ab7fd156e8ddce7$export$e5b52c46a548ff03","options1","defaultOptions","delayedEventsMap","listeners","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","NotStarted","forwardTo","_outgoingQueue","start","batch","status","Stopped","Running","JSON","stringify","scheduler","forward","nextState","_nextState","update","_state","immediate","Parent","isParent","origin","sessionId","predictableActionArguments","actionOrExec","err","defer","sendTo","sendId","invokeSource","serviceCreator","services","resolvedData","$0ba2bc18e91bd780$export$e756e60189cc2351","source","spawn","spawnActivity","stopChild","label","logger","resolvedOptions","clock","id1","resolvedId","defineProperty","_initialState","execute","actionsConfig","listener","_g","_h","_j","_k","contextListener","finalChildStateNode","find","doneData","_l","_m","_stop","_stopChildren","onTransition","nextListenerOrObserver","_","completeListener","completeOnce","onDone","onStop","onEvent","onSend","onChange","off","_init","resolvedState","resolveState","attachDev","stop","e_6","e_8","e_9","e_10","e_6_1","e_8_1","_o","e_9_1","_q","_p","clearTimeout","e_10_1","exitActions","sort","order","onExit","$ab1fe168d053d080$export$b8b9e7ba5b8c7b3e","_exec","resolvedActions","newState","changed","e_11","batchChanged","batchedActions","_loop_1","$db5fc64655327378$export$e42513ad58964418","events_1","events_1_1","e_11_1","sender","nextEvents","nextEvent","e_12","e_12_1","setTimeout","cancel","removeChild","childId","spawnPromise","resolve","spawnCallback","$4b4d9290e25c7ae7$export$e769f6913f14f1b7","spawnActor","spawnObservable","spawnMachine","spawnBehavior","childService","doneEvent","actorRef","promise","canceled","response","errorData","errorEvent","strict","unsubscribed","callbackStop","receivers","emitted","newListener","receiver","subscription","implementation","dispose","spawnEffect","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","$700c0fa66ede1df8$export$436e852aa2feda95","simpleSrc","$700c0fa66ede1df8$export$4c73f685ba879446","invokeConfig","onError","invokeDef","$d9c803f633d21408$export$3c9a16f847548506","$7c7ca11796d1b64f$var$EMPTY_OBJECT","$7c7ca11796d1b64f$var$isStateId","$7c7ca11796d1b64f$export$342f24f5edd47b1","_stateInfo","_context","_a1","__xstatenode","__cache","relativeValue","initialStateValue","on","candidates","delayedTransitions","idMap","path","join","version","parallel","schema","description","initial","stateConfig","dfs","_transient","always","onEntry","entry","exit","invoke","invokeId","$0ba2bc18e91bd780$export$107b54c5097f9157","withConfig","definition","enumerable","configurable","eventType","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","sameEventType","afterConfig","after","delayRef","idSuffix","$ab1fe168d053d080$export$742acabee3dd6465","mutateEntryExit","configTransition","resolvedTransition","delayedTransition","formatTransition","getStateNodes","getStateNode","subStateKeys","subStateNodes","subStateKey","handles","stateFromConfig","transitionLeafNode","transitionCompoundNode","_transition","transitionParallelNode","transitionMap","stateTransitions","enabledTransitions","st","exitSet","getTransitionData","selectedTransition","nextStateNodes","candidate","stateIn","in","resolvedContext","isInState","getStateNodeById","guardPassed","message","allNextStateNodes","getRelativeStateNodes","internal","targetNode","getPotentiallyReenteringNodes","nodes","possibleAncestor","getActions","resolvedConfig","isDone","prevState","prevConfig","entrySet","prevConfig_1","prevConfig_1_1","exitStates","doneEvents","entryStates","grandparent","parentNode","entryActions1","entryActions","invokeActions","activityDef","$ab1fe168d053d080$export$b3571188c770cc5a","$ab1fe168d053d080$export$fa6813432f753b0d","stopActions","resolvedStateValue","getResolvedPath","test","stateTransition","resolveRaisedTransition","originalEvent","currentActions","resolveTransition","_a2","willTransition","resolvedConfiguration","items","truthy","falsy","items_1","items_1_1","$0ba2bc18e91bd780$export$b29f828819edca8d","raisedEvents","nonRaisedActions","invokeDefinition","invokeSrc","$4b4d9290e25c7ae7$export$78b4a98dcb5ac328","didUpdateContext","hasAlwaysTransitions","maybeNextState","raisedEvent","stateKey","resolvedStateId","getStateNodeByPath","currentStateNode","arrayStatePath","subStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialPath","getFromRelativePath","relativePath","childStatePath","relativeStateValue","historyTarget","relativeChildPath","accessorProp","subHistoryValue","props_2","props_2_1","prop","subStatePath","stateIds","childStateIds","resolveTarget","_target","isInternalTarget","$9cec7b12efdda519$export$e6e34fd1f2686227","$d8e1e0b3857db96d$var$noError","display","$d8e1e0b3857db96d$export$93ed16ea019ad5e3","firstOperand","secondOperand","selectedOperator","editFirstOperand","NUMBER","OPERATOR","DELETE","editOperator","editSecondOperand","showResults","appendToDisplay","removeFromDisplay","appendDecimalPoint","saveFirstOperand","$943942fd9e8a916e$exports","Decimal","saveSecondOperand","saveOperator","resetAll","resetFirstOperand","resetSecondOperand","resetOperator","resetDisplay","operator","$d8e1e0b3857db96d$var$calculate","verifyResults","$9524bea046020db5$var$operationOutput","document","querySelector","$9524bea046020db5$var$output","$9524bea046020db5$var$calculatorService","$9ab7fd156e8ddce7$export$67beed298888a38b","operationOutputText","innerText","$9524bea046020db5$var$handleButtonInput","buttonValue","$9524bea046020db5$var$convertButtonValueToEventName","alert","addEventListener","tagName","classList","toggle"],"version":3,"file":"index.735a61c8.js.map"}