const e=Object.freeze({ADD:"add",SUBTRACT:"subtract",MULTIPLY:"multiply",DIVIDE:"divide",CLEAR:"clear",BACKSPACE:"back",EQUALS:"equals",isOperator(e){return[this.ADD,this.SUBTRACT,this.MULTIPLY,this.DIVIDE].includes(e)},isNumber:e=>1==e.length&&!isNaN(parseInt(e))});let t,r=0,a=0,i=e.EQUALS,o="0";const s=document.querySelector(".output");function n(){t=void 0,r=0,a=0,i=e.EQUALS,o="0"}function c(){switch(t){case e.DIVIDE:r=Math.floor(r/a);break;case e.MULTIPLY:r*=a;break;case e.SUBTRACT:r-=a;break;case e.ADD:r+=a;break;case void 0:r=a;break;default:return void alert(`Error: operator "${t}" is not valid.`)}o=r.toString()}document.querySelector(".calc").addEventListener("click",(function(u){var l;"BUTTON"===u.target.tagName&&(function(s){var u;e.isNumber(s)?(u=s,e.isNumber(i)?"0"===o?o=u:o+=u:e.isOperator(i)?o=u:i==e.EQUALS&&(n(),o=u),i=u):e.isOperator(s)?function(s){e.isNumber(i)&&(r=a,a=parseInt(o),c()),t=s,i=s}(s):s==e.CLEAR?n():s==e.BACKSPACE?i==e.EQUALS?n():o=!e.isNumber(i)||o.length<=1?"0":o.slice(0,-1):s==e.EQUALS?e.isOperator(i)||(e.isNumber(i)&&(a=parseInt(o)),c(),i=e.EQUALS):alert(`Error: operator "${s}" is not valid.`)}(l=u.target.value),o.length>13&&(e.isNumber(i)?o=o.substr(0,13):(n(),o="ERROR")),s.innerText=o,console.log(`State after "${l}": operator: ${t}, total: ${r}, operand: ${a}, last action: ${i}`))}));
//# sourceMappingURL=index.648c69bd.js.map
